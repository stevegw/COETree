<?xml version="1.0" encoding="UTF-8" standalone="no"?><Entities build="b1323" majorVersion="9" minorVersion="3" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="6" schemaVersion="1134" universal=""><StyleDefinitions/><Networks/><PersistenceProviderPackages/><Mashups><Mashup aspect.isFlex="true" aspect.isResponsive="true" aspect.mashupType="mashup" columns="0.0" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.046Z" name="TEST_MU" projectName="WCProject" rows="0.0" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Mashup Mobile Settings" isHidden="true" isMultiRow="false" name="MobileSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Disable Zoom" baseType="BOOLEAN" description="Disables zooming in and out within the mashup" name="disableZoom" ordinal="0"/><FieldDefinition aspect.defaultValue="true" aspect.friendlyName="Full Screen Mode" baseType="BOOLEAN" description="Open the mashup in full screen mode" name="fullScreenMode" ordinal="0"/><FieldDefinition aspect.friendlyName="Height" baseType="STRING" description="The height of the mashup page" name="height" ordinal="0"/><FieldDefinition aspect.defaultValue="device-height" aspect.friendlyName="Height Type" baseType="STRING" description="Use the height of the device display, or a custom height (in px)" name="heightType" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Initial Scale" baseType="NUMBER" description="The initial zoom scale when the mashup is loaded for the first time" name="initialScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Shortcut Icon Title" baseType="STRING" description="A title for the mashup shortcut on the iOS home screen" name="iosShortcutIconTitle" ordinal="0"/><FieldDefinition aspect.defaultValue="black-translucent" aspect.friendlyName="Status Bar Appearance" baseType="STRING" description="The style of the iOS status bar" name="iosStatusBarAppearance" ordinal="0"/><FieldDefinition aspect.defaultValue="10.0" aspect.friendlyName="Maximum Scale" baseType="NUMBER" description="The maximum scale that users can zoom out to" name="maximumScale" ordinal="0"/><FieldDefinition aspect.defaultValue="0.1" aspect.friendlyName="Minimum Scale" baseType="NUMBER" description="The minimum scale that users can zoom out to" name="minimumScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Width" baseType="STRING" description="The width of the mashup page" name="width" ordinal="0"/><FieldDefinition aspect.defaultValue="device-width" aspect.friendlyName="Width Type" baseType="STRING" description="Use the width of the device display, or a custom width (in px)" name="widthType" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><disableZoom>false</disableZoom><fullScreenMode>true</fullScreenMode><height/><heightType><![CDATA[device-height]]></heightType><initialScale>1.0</initialScale><iosShortcutIconTitle/><iosStatusBarAppearance><![CDATA[black-translucent]]></iosStatusBarAppearance><maximumScale>10.0</maximumScale><minimumScale>0.1</minimumScale><width/><widthType><![CDATA[device-width]]></widthType></Row></Rows></ConfigurationTable></ConfigurationTables><ParameterDefinitions/><Things/><ThingShapes/><ThingTemplates/><mashupContent><![CDATA[{
  "CustomMashupCss" : "",
  "Data" : {
    "Session" : {
      "DataName" : "Session",
      "EntityName" : "",
      "EntityType" : "Session",
      "Id" : "session",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "SessionInterface",
        "Name" : "GetGlobalSessionValues",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetGlobalSessionValues"
      } ]
    },
    "UserExtensions" : {
      "DataName" : "UserExtensions",
      "EntityName" : "",
      "EntityType" : "UserExtensions",
      "Id" : "UserExtensions",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "UserExtensionInterface",
        "Name" : "GetCurrentUserExtensionProperties",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetCurrentUserExtensionProperties"
      } ]
    }
  },
  "DataBindings" : [ ],
  "DesignTimePermissions" : {
    "Create" : [ ],
    "Delete" : [ ],
    "Metadata" : [ ],
    "Read" : [ ],
    "Update" : [ ]
  },
  "Events" : [ ],
  "RunTimePermissions" : {
    "permissions" : [ ]
  },
  "UI" : {
    "Properties" : {
      "AddToDashboardButton" : "SimplePlus",
      "AddToDashboardButtonStyle" : "DefaultAddToDashboardButtonStyle",
      "Area" : "Mashup",
      "BGImage" : "",
      "BGImageRepeat" : "no-repeat",
      "BGImageSize" : "auto",
      "Columns" : 0,
      "ConfigureGadgetButton" : "SimpleGear",
      "ConfigureGadgetButtonStyle" : "DefaultConfigureGadgetButtonStyle",
      "DisplayName" : "Mashup",
      "EnableParameterEditing" : false,
      "Height" : 618,
      "Id" : "mashup-root",
      "IgnoreWarningsInViewMashup" : false,
      "IsPrintLayout" : false,
      "Left" : 0,
      "MashupToEditGadget" : "DefaultMashupToEditGadget",
      "MinHeight" : 0,
      "MinWidth" : 0,
      "ResponsiveLayout" : true,
      "Rows" : 0,
      "ShowDataLoading" : true,
      "Style" : "DefaultMashupStyle",
      "StyleTheme" : "PTC Convergence Theme",
      "Title" : "",
      "TitleBar" : false,
      "TitleBarStyle" : "DefaultTitleBarStyle",
      "TitleBarText" : "Gadget Title Here",
      "Top" : 0,
      "Type" : "mashup",
      "UseMasterTheme" : false,
      "UseTheme" : false,
      "Visible" : true,
      "Width" : 1024,
      "Z-index" : 10,
      "__TypeDisplayName" : "MashupTemplate",
      "flex-grow" : 0,
      "flex-shrink" : 0,
      "id_index" : 9,
      "supportsAutoResize" : true
    },
    "Widgets" : [ {
      "Properties" : {
        "Area" : "UI",
        "DisplayName" : "container-2",
        "EnableExpandCollapse" : false,
        "ExpandCollapseTabLocation" : "inside",
        "Expanded" : true,
        "Id" : "flexcontainer-2",
        "LastContainer" : true,
        "Overlay" : false,
        "ResponsiveLayout" : true,
        "ShowDataLoading" : true,
        "ShowExpandCollapseTab" : false,
        "SourceURL" : "",
        "Style" : "DefaultContainerStyle",
        "StyleProperties" : { },
        "Type" : "flexcontainer",
        "UseTheme" : true,
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Flex Container",
        "align-content" : "flex-start",
        "align-items" : "flex-start",
        "flex-basis" : "auto",
        "flex-direction" : "column",
        "flex-grow" : 1,
        "flex-height" : 0,
        "flex-max-height" : "",
        "flex-max-width" : "",
        "flex-min-height" : "",
        "flex-min-width" : "",
        "flex-shrink" : 0,
        "flex-size" : "default",
        "flex-width" : 0,
        "flex-wrap" : "nowrap",
        "iconClass" : "widgets-flexcontainer",
        "justify-content" : "flex-start",
        "positioning" : "responsive",
        "userCannotRemove" : true
      },
      "Widgets" : [ {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "Header",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "container-4",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "150px",
          "flex-max-width" : "",
          "flex-min-height" : "150px",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer-fixed",
          "isLocked" : false,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ ]
      }, {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "container-5",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-5",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "",
          "flex-max-width" : "",
          "flex-min-height" : "",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer",
          "isLocked" : true,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Left Sidebar",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-7",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "100px",
            "flex-min-height" : "",
            "flex-min-width" : "100px",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Body",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-8",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "isLocked" : true,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "AlternateText" : "",
              "Area" : "UI",
              "DisplayName" : "ptcs-image-9",
              "Id" : "ptcsimage-9",
              "LastContainer" : false,
              "Left" : 154,
              "Position" : "top",
              "PreventCaching" : false,
              "ResponsiveLayout" : true,
              "Scaling" : "fit-x",
              "ShowDataLoading" : true,
              "SourceURL" : "/Thingworx/MediaEntities/WC_Filter",
              "Top" : 66,
              "Type" : "ptcsimage",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Image"
            },
            "Widgets" : [ ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Right Sidebar",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-6",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "100px",
            "flex-min-height" : "",
            "flex-min-width" : "100px",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ ]
        } ]
      }, {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "Footer",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-3",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "100px",
          "flex-max-width" : "",
          "flex-min-height" : "100px",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer-fixed",
          "isLocked" : false,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ ]
      } ]
    } ]
  },
  "mashupType" : "mashupTemplate"
}]]></mashupContent><preview/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;" timestamp="2022-02-09T17:46:31.242Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2022-02-09T17:46:57.789Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.723Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.289Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.896Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.073Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></Mashup><Mashup aspect.isFlex="true" aspect.isResponsive="true" aspect.mashupType="mashup" columns="0.0" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.077Z" name="FileUpload" projectName="WCProject" rows="0.0" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Mashup Mobile Settings" isHidden="true" isMultiRow="false" name="MobileSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Disable Zoom" baseType="BOOLEAN" description="Disables zooming in and out within the mashup" name="disableZoom" ordinal="0"/><FieldDefinition aspect.defaultValue="true" aspect.friendlyName="Full Screen Mode" baseType="BOOLEAN" description="Open the mashup in full screen mode" name="fullScreenMode" ordinal="0"/><FieldDefinition aspect.friendlyName="Height" baseType="STRING" description="The height of the mashup page" name="height" ordinal="0"/><FieldDefinition aspect.defaultValue="device-height" aspect.friendlyName="Height Type" baseType="STRING" description="Use the height of the device display, or a custom height (in px)" name="heightType" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Initial Scale" baseType="NUMBER" description="The initial zoom scale when the mashup is loaded for the first time" name="initialScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Shortcut Icon Title" baseType="STRING" description="A title for the mashup shortcut on the iOS home screen" name="iosShortcutIconTitle" ordinal="0"/><FieldDefinition aspect.defaultValue="black-translucent" aspect.friendlyName="Status Bar Appearance" baseType="STRING" description="The style of the iOS status bar" name="iosStatusBarAppearance" ordinal="0"/><FieldDefinition aspect.defaultValue="10.0" aspect.friendlyName="Maximum Scale" baseType="NUMBER" description="The maximum scale that users can zoom out to" name="maximumScale" ordinal="0"/><FieldDefinition aspect.defaultValue="0.1" aspect.friendlyName="Minimum Scale" baseType="NUMBER" description="The minimum scale that users can zoom out to" name="minimumScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Width" baseType="STRING" description="The width of the mashup page" name="width" ordinal="0"/><FieldDefinition aspect.defaultValue="device-width" aspect.friendlyName="Width Type" baseType="STRING" description="Use the width of the device display, or a custom width (in px)" name="widthType" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><disableZoom>false</disableZoom><fullScreenMode>true</fullScreenMode><height/><heightType><![CDATA[device-height]]></heightType><initialScale>1.0</initialScale><iosShortcutIconTitle/><iosStatusBarAppearance><![CDATA[black-translucent]]></iosStatusBarAppearance><maximumScale>10.0</maximumScale><minimumScale>0.1</minimumScale><width/><widthType><![CDATA[device-width]]></widthType></Row></Rows></ConfigurationTable></ConfigurationTables><ParameterDefinitions/><Things/><ThingShapes/><ThingTemplates/><mashupContent><![CDATA[{
  "CustomMashupCss" : "",
  "Data" : {
    "Session" : {
      "DataName" : "Session",
      "EntityName" : "",
      "EntityType" : "Session",
      "Id" : "session",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "SessionInterface",
        "Name" : "GetGlobalSessionValues",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetGlobalSessionValues"
      } ]
    },
    "UserExtensions" : {
      "DataName" : "UserExtensions",
      "EntityName" : "",
      "EntityType" : "UserExtensions",
      "Id" : "UserExtensions",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "UserExtensionInterface",
        "Name" : "GetCurrentUserExtensionProperties",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetCurrentUserExtensionProperties"
      } ]
    }
  },
  "DataBindings" : [ ],
  "DesignTimePermissions" : {
    "Create" : [ ],
    "Delete" : [ ],
    "Metadata" : [ ],
    "Read" : [ ],
    "Update" : [ ]
  },
  "Events" : [ ],
  "RunTimePermissions" : {
    "permissions" : [ ]
  },
  "UI" : {
    "Properties" : {
      "AddToDashboardButton" : "SimplePlus",
      "AddToDashboardButtonStyle" : "DefaultAddToDashboardButtonStyle",
      "Area" : "Mashup",
      "BGImage" : "",
      "BGImageRepeat" : "no-repeat",
      "BGImageSize" : "auto",
      "Columns" : 0,
      "ConfigureGadgetButton" : "SimpleGear",
      "ConfigureGadgetButtonStyle" : "DefaultConfigureGadgetButtonStyle",
      "DisplayName" : "Mashup",
      "EnableParameterEditing" : false,
      "Height" : 618,
      "Id" : "mashup-root",
      "IgnoreWarningsInViewMashup" : false,
      "IsPrintLayout" : false,
      "Left" : 0,
      "MashupToEditGadget" : "DefaultMashupToEditGadget",
      "MinHeight" : 0,
      "MinWidth" : 0,
      "ResponsiveLayout" : true,
      "Rows" : 0,
      "ShowDataLoading" : true,
      "Style" : "DefaultMashupStyle",
      "StyleTheme" : "PTC Convergence Theme",
      "Title" : "",
      "TitleBar" : false,
      "TitleBarStyle" : "DefaultTitleBarStyle",
      "TitleBarText" : "Gadget Title Here",
      "Top" : 0,
      "Type" : "mashup",
      "UseMasterTheme" : false,
      "UseTheme" : false,
      "Visible" : true,
      "Width" : 1024,
      "Z-index" : 10,
      "__TypeDisplayName" : "MashupTemplate",
      "flex-grow" : 0,
      "flex-shrink" : 0,
      "id_index" : 9,
      "supportsAutoResize" : true
    },
    "Widgets" : [ {
      "Properties" : {
        "Area" : "UI",
        "DisplayName" : "container-2",
        "EnableExpandCollapse" : false,
        "ExpandCollapseTabLocation" : "inside",
        "Expanded" : true,
        "Id" : "flexcontainer-2",
        "LastContainer" : true,
        "Overlay" : false,
        "ResponsiveLayout" : true,
        "ShowDataLoading" : true,
        "ShowExpandCollapseTab" : false,
        "SourceURL" : "",
        "Style" : "DefaultContainerStyle",
        "StyleProperties" : { },
        "Type" : "flexcontainer",
        "UseTheme" : true,
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Flex Container",
        "align-content" : "flex-start",
        "align-items" : "flex-start",
        "flex-basis" : "auto",
        "flex-direction" : "column",
        "flex-grow" : 1,
        "flex-height" : 0,
        "flex-max-height" : "",
        "flex-max-width" : "",
        "flex-min-height" : "",
        "flex-min-width" : "",
        "flex-shrink" : 0,
        "flex-size" : "default",
        "flex-width" : 0,
        "flex-wrap" : "nowrap",
        "iconClass" : "widgets-flexcontainer",
        "justify-content" : "flex-start",
        "positioning" : "responsive",
        "userCannotRemove" : true
      },
      "Widgets" : [ {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "Header",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "container-4",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "150px",
          "flex-max-width" : "",
          "flex-min-height" : "150px",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer-fixed",
          "isLocked" : false,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ ]
      }, {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "container-5",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-5",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "",
          "flex-max-width" : "",
          "flex-min-height" : "",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer",
          "isLocked" : true,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Left Sidebar",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-7",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "100px",
            "flex-min-height" : "",
            "flex-min-width" : "100px",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Body",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-8",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "isLocked" : true,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "AllowedFileTypes" : "",
              "Area" : "UI",
              "DisplayName" : "fileupload-9",
              "DisplayPathTextBox" : true,
              "DisplayRepositorySelector" : true,
              "FileName" : "",
              "FocusStyle" : "DefaultButtonFocusStyle",
              "FullPath" : "",
              "Height" : 95,
              "Id" : "fileupload-9",
              "LastContainer" : false,
              "Left" : 29,
              "Margin" : "5",
              "MultiFilesSelect" : false,
              "Path" : "/",
              "RepositoryName" : "SystemRepository",
              "RepositoryStyle" : "DefaultRepositoryStyle",
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "Style" : "DefaultFileUploadStyle",
              "TabSequence" : 0,
              "Top" : 21,
              "Type" : "fileupload",
              "Visible" : true,
              "Width" : 302,
              "Z-index" : 10,
              "__TypeDisplayName" : "File Upload"
            },
            "Widgets" : [ ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "Right Sidebar",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-6",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Flex Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-height" : 0,
            "flex-max-height" : "",
            "flex-max-width" : "100px",
            "flex-min-height" : "",
            "flex-min-width" : "100px",
            "flex-shrink" : 0,
            "flex-size" : "default",
            "flex-width" : 0,
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ ]
        } ]
      }, {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "Footer",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-3",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Flex Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "row",
          "flex-grow" : 1,
          "flex-height" : 0,
          "flex-max-height" : "100px",
          "flex-max-width" : "",
          "flex-min-height" : "100px",
          "flex-min-width" : "",
          "flex-shrink" : 0,
          "flex-size" : "default",
          "flex-width" : 0,
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer-fixed",
          "isLocked" : false,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ ]
      } ]
    } ]
  },
  "mashupType" : "mashupTemplate"
}]]></mashupContent><preview/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;" timestamp="2022-07-13T17:51:54.135Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2022-07-13T18:03:02.323Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.901Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.073Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.089Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></Mashup></Mashups><ScriptFunctionLibraries/><Projects><Project artifactId="" aspect.projectType="Component" dependsOn="{&quot;extensions&quot;:&quot;CreoViewRWHelper:1.3.4&quot;,&quot;projects&quot;:&quot;KM:1.0.0&quot;}" description="" documentationContent="" groupId="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.109Z" minPlatformVersion="" name="WCProject" packageVersion="1.0.0" projectName="WCProject" publishResult="" state="DRAFT" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2021-12-23T00:24:29.788Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : dependsOn : updated&#10;" timestamp="2022-01-27T20:44:23.881Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.598Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.336Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.964Z" user="sgreywilson"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-01-11T14:26:56.109Z" user="Administrator"/></ConfigurationChanges></Project></Projects><Users/><DirectoryServices/><Widgets/><MediaEntities><MediaEntity description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.093Z" name="WC_Part" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Use Existing Flow Configuration" isMultiRow="false" name="UseExistingFlowConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Connector Name" baseType="STRING" description="Connector Name" name="connectorName" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><connectorName/><ignoreSSLErrors>false</ignoreSSLErrors></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Content Source Connection information" isMultiRow="false" name="ContentSourceConnectionInformation" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="none" aspect.friendlyName="AuthenticationType" aspect.selectOptions="none:none|basic:basic|SSO:SSO|SessionUser:SessionUser" baseType="STRING" description="Authentication type" name="authenticationType" ordinal="4"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Authorization Server ID" name="authorizationServerId" ordinal="7"/><FieldDefinition aspect.friendlyName="Dynamic Content" baseType="BOOLEAN" description="Display dynamic content from external URL" name="dynamicContent" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password for basic authentication" name="password" ordinal="6"/><FieldDefinition aspect.friendlyName="TestConnectionURL" baseType="STRING" description="The URL to test the connection" name="testUrl" ordinal="8"/><FieldDefinition aspect.defaultValue="60.0" aspect.friendlyName="Timeout" baseType="NUMBER" description="Timeout" name="timeout" ordinal="3"/><FieldDefinition aspect.friendlyName="URL" baseType="STRING" description="The URL to the content source" name="url" ordinal="1"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username for basic authentication" name="userId" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><authenticationType><![CDATA[none]]></authenticationType><authorizationServerId/><dynamicContent>false</dynamicContent><ignoreSSLErrors>false</ignoreSSLErrors><password/><testUrl/><timeout>60.0</timeout><url/><userId/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="A single scope for the authorization server." name="scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="SSL Connection Configuration" isMultiRow="false" name="SSLConnectionConfiguration" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SSLKeyStorePassword" baseType="PASSWORD" description="SSL Keystore Password" name="SSLKeyStorePassword" ordinal="2"/><FieldDefinition aspect.friendlyName="SSLKeyStorePath" baseType="STRING" description="Absolute path to the client SSL keystore" name="SSLKeyStorePath" ordinal="1"/><FieldDefinition aspect.friendlyName="SSLTrustStorePassword" baseType="PASSWORD" description="SSL Truststore Password" name="SSLTrustStorePassword" ordinal="4"/><FieldDefinition aspect.friendlyName="SSLTrustStorePath" baseType="STRING" description="Absolute path to the SSL client truststore" name="SSLTrustStorePath" ordinal="3"/></FieldDefinitions></DataShape><Rows><Row><SSLKeyStorePassword/><SSLKeyStorePath/><SSLTrustStorePassword/><SSLTrustStorePath/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Session User Configuration" isMultiRow="false" name="SessionUserConfigurationTable" ordinal="4"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SessionUserQueryParameter" baseType="STRING" description="Session User Query Parameter" name="SessionUserQueryParameter" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><SessionUserQueryParameter/></Row></Rows></ConfigurationTable></ConfigurationTables><content><![CDATA[R0lGODlhEAAQAKIAAJeZi2BhU+fp4Lq/sAAAAP///wAAAAAAACH5BAEAAAUALAAAAAAQABAAAANF
WLoVzvA1EZS0goasxSDLxo3ex4jkYJ6cE6hrg1YKABMgSi32Lbe8GwjjARh9LJgyNlkuhw0VTihl
4BSE1RWywEG5YG4CADs=]]></content><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, content : updated&#10;" timestamp="2022-02-17T13:36:05.901Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.786Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.321Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.910Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/></ConfigurationChanges></MediaEntity><MediaEntity description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.093Z" name="WC_Filter" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Use Existing Flow Configuration" isMultiRow="false" name="UseExistingFlowConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Connector Name" baseType="STRING" description="Connector Name" name="connectorName" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><connectorName/><ignoreSSLErrors>false</ignoreSSLErrors></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Content Source Connection information" isMultiRow="false" name="ContentSourceConnectionInformation" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="none" aspect.friendlyName="AuthenticationType" aspect.selectOptions="none:none|basic:basic|SSO:SSO|SessionUser:SessionUser" baseType="STRING" description="Authentication type" name="authenticationType" ordinal="4"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Authorization Server ID" name="authorizationServerId" ordinal="7"/><FieldDefinition aspect.friendlyName="Dynamic Content" baseType="BOOLEAN" description="Display dynamic content from external URL" name="dynamicContent" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password for basic authentication" name="password" ordinal="6"/><FieldDefinition aspect.friendlyName="TestConnectionURL" baseType="STRING" description="The URL to test the connection" name="testUrl" ordinal="8"/><FieldDefinition aspect.defaultValue="60.0" aspect.friendlyName="Timeout" baseType="NUMBER" description="Timeout" name="timeout" ordinal="3"/><FieldDefinition aspect.friendlyName="URL" baseType="STRING" description="The URL to the content source" name="url" ordinal="1"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username for basic authentication" name="userId" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><authenticationType><![CDATA[none]]></authenticationType><authorizationServerId/><dynamicContent>false</dynamicContent><ignoreSSLErrors>false</ignoreSSLErrors><password/><testUrl/><timeout>60.0</timeout><url/><userId/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="A single scope for the authorization server." name="scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="SSL Connection Configuration" isMultiRow="false" name="SSLConnectionConfiguration" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SSLKeyStorePassword" baseType="PASSWORD" description="SSL Keystore Password" name="SSLKeyStorePassword" ordinal="2"/><FieldDefinition aspect.friendlyName="SSLKeyStorePath" baseType="STRING" description="Absolute path to the client SSL keystore" name="SSLKeyStorePath" ordinal="1"/><FieldDefinition aspect.friendlyName="SSLTrustStorePassword" baseType="PASSWORD" description="SSL Truststore Password" name="SSLTrustStorePassword" ordinal="4"/><FieldDefinition aspect.friendlyName="SSLTrustStorePath" baseType="STRING" description="Absolute path to the SSL client truststore" name="SSLTrustStorePath" ordinal="3"/></FieldDefinitions></DataShape><Rows><Row><SSLKeyStorePassword/><SSLKeyStorePath/><SSLTrustStorePassword/><SSLTrustStorePath/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Session User Configuration" isMultiRow="false" name="SessionUserConfigurationTable" ordinal="4"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SessionUserQueryParameter" baseType="STRING" description="Session User Query Parameter" name="SessionUserQueryParameter" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><SessionUserQueryParameter/></Row></Rows></ConfigurationTable></ConfigurationTables><content><![CDATA[/9j/4AAQSkZJRgABAgEAeAB4AAD//gASTEVBRFRPT0xTIHYyMC4wAP/bAIQABQUFCAUIDAcHDAwJ
CQkMDQwMDAwNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQEFCAgK
BwoMBwcMDQwKDA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
DQ0N/8QBogAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoLAQADAQEBAQEBAQEBAAAAAAAAAQID
BAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHw
JDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6
g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk
5ebn6Onq8fLz9PX29/j5+hEAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKR
obHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU
1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/8AAEQgAOwBFAwERAAIRAQMRAf/aAAwDAQACEQMRAD8A
+taAAnHJoArw3cNwSIZEkKHDBGVtp9DgnB9jQBYoAKACgCvDdwXBZYZEkZOGCMrFT0wQCcc+tQpR
ldRadt7NOxrKnOmk5xlFPZuLSfpdalirMgoAKAOO8Y3LQQRx/MsTsS8ittKlSmxcjn5ySPTjmgDz
9LyS3u4ZLbLMZNwjVtuTg/u37Ow6lzwaAPbo2LKCRgkAkehx0oAfQBg6vfRpC6s2yMAh3BwenRT1
BI6MOlfM5hmCoJ0qTvLZtfkvN9+h6mGotyU7arVJrT1fl5dTxr4f+HtSk1xtWSZxpkTS4Vt378sk
iBcE/wDLNmV9xBDY4rpwEZuKqzTjfo3e+n9M93MsZSq0VQUU6miukko2abfo7NWWx9B17p8cFABQ
BUvbGDUYjBcoJIzg7T0yOh/A0AcJpdtpGn3MrTuglt5iIvMOCgHTbjt160AbWs+JksUjNoFnaf7m
OQcHB6e9ADBrknkk3e2Aqu5ypOQD2Ge/r7V83mOPWGj7Km/ffbf5eZ6OHw7qNStp07fM5K0tJ/G0
wdwYtKiPA/5785wucgxnkOcg56V5+X5fKpJYvFrXeMX0PQr144ePsqXxP4merwQJbRrFEoREAVVH
QADAA/Cvs9tEfPt31ZLTEFABQBWuLqO1x5hxuzjjPTGf51cYuWxLko7nJaRc2jSXTSqrE3DYJQE4
wPUVXs5MnnSIfELabOsTyv5PksGXapHQ5IwMdcVrDD1KjtBEurGO7ORtNAstZuXubm8kuIWcsIlD
R7RnIUkNzj3FeTLKHSrOtWV2+j1XyPRjmH7vkp6W6nqkF9aWyLFF8iIMABcAD6CvRVKS0SOF1E9W
yzDqEM7BEJ3Hpx6DP9KTg4q7BST0RdrMsKACgDG1aCSfZ5alsbs47Z2/4V0Umo3u7bfqYzTdreZ5
9ZaLcXUtwytNHtmYEIQBnj9a0TjrrbUiz00Idd8O3zRxmFHnMXUNgluc89K9bCV6dK8Zytfqcdal
KorRutGtN1fqvMj8LeH9QtZJbi4iaLzRwmOnOfWrxeIp1FGEJJ26io0ZUoqLu7K13u/N+Z2f2Cf+
41eVzx7nVyvsXNPtJop1Z1IUZyT/ALpFZzknFpP+rlwi002jpa4zpCgAoAKAOThh1Owln8iGKSOW
VpFLSbTg+2KAMHxffXcMMPngwK5/e+WS+35uMHjtQAzwDfTXMtxHuaS2Qfu3cEEndj+XvQB6bQAU
AFABQAUAFABQBBcWsN2uyeNJV9HVWH5MCKAG21nBZrst444V9I0VB+SgCgCzQAUAFABQAUAFABQA
UAFABQAUAFABQB//2Q==]]></content><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, content : updated&#10;" timestamp="2022-02-09T15:19:10.202Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.739Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.305Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.906Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/></ConfigurationChanges></MediaEntity><MediaEntity description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.109Z" name="WC_FilterSelected" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Use Existing Flow Configuration" isMultiRow="false" name="UseExistingFlowConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Connector Name" baseType="STRING" description="Connector Name" name="connectorName" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><connectorName/><ignoreSSLErrors>false</ignoreSSLErrors></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Content Source Connection information" isMultiRow="false" name="ContentSourceConnectionInformation" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="none" aspect.friendlyName="AuthenticationType" aspect.selectOptions="none:none|basic:basic|SSO:SSO|SessionUser:SessionUser" baseType="STRING" description="Authentication type" name="authenticationType" ordinal="4"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Authorization Server ID" name="authorizationServerId" ordinal="7"/><FieldDefinition aspect.friendlyName="Dynamic Content" baseType="BOOLEAN" description="Display dynamic content from external URL" name="dynamicContent" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password for basic authentication" name="password" ordinal="6"/><FieldDefinition aspect.friendlyName="TestConnectionURL" baseType="STRING" description="The URL to test the connection" name="testUrl" ordinal="8"/><FieldDefinition aspect.defaultValue="60.0" aspect.friendlyName="Timeout" baseType="NUMBER" description="Timeout" name="timeout" ordinal="3"/><FieldDefinition aspect.friendlyName="URL" baseType="STRING" description="The URL to the content source" name="url" ordinal="1"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username for basic authentication" name="userId" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><authenticationType><![CDATA[none]]></authenticationType><authorizationServerId/><dynamicContent>false</dynamicContent><ignoreSSLErrors>false</ignoreSSLErrors><password/><testUrl/><timeout>60.0</timeout><url/><userId/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="A single scope for the authorization server." name="scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="SSL Connection Configuration" isMultiRow="false" name="SSLConnectionConfiguration" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SSLKeyStorePassword" baseType="PASSWORD" description="SSL Keystore Password" name="SSLKeyStorePassword" ordinal="2"/><FieldDefinition aspect.friendlyName="SSLKeyStorePath" baseType="STRING" description="Absolute path to the client SSL keystore" name="SSLKeyStorePath" ordinal="1"/><FieldDefinition aspect.friendlyName="SSLTrustStorePassword" baseType="PASSWORD" description="SSL Truststore Password" name="SSLTrustStorePassword" ordinal="4"/><FieldDefinition aspect.friendlyName="SSLTrustStorePath" baseType="STRING" description="Absolute path to the SSL client truststore" name="SSLTrustStorePath" ordinal="3"/></FieldDefinitions></DataShape><Rows><Row><SSLKeyStorePassword/><SSLKeyStorePath/><SSLTrustStorePassword/><SSLTrustStorePath/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Session User Configuration" isMultiRow="false" name="SessionUserConfigurationTable" ordinal="4"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SessionUserQueryParameter" baseType="STRING" description="Session User Query Parameter" name="SessionUserQueryParameter" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><SessionUserQueryParameter/></Row></Rows></ConfigurationTable></ConfigurationTables><content><![CDATA[/9j/4AAQSkZJRgABAgEAeAB4AAD//gASTEVBRFRPT0xTIHYyMC4wAP/bAIQABQUFCAUIDAcHDAwJ
CQkMDQwMDAwNDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQEFCAgK
BwoMBwcMDQwKDA0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0N
DQ0N/8QBogAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoLAQADAQEBAQEBAQEBAAAAAAAAAQID
BAUGBwgJCgsQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHw
JDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6
g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk
5ebn6Onq8fLz9PX29/j5+hEAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKR
obHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU
1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/8AAEQgAOwBFAwERAAIRAQMRAf/aAAwDAQACEQMRAD8A
+taAAnHJoArw3cNwSIZEkKHDBGVtp9DgnB9jQBYoAKACgCvDdwXBZYZEkZOGCMrFT0wQCcc+tQpR
ldRadt7NOxrKnOmk5xlFPZuLSfpdalirMgoAKAOO8Y3LQQRx/MsTsS8ittKlSmxcjn5ySPTjmgDz
9LyS3u4ZLbLMZNwjVtuTg/u37Ow6lzwaAPbo2LKCRgkAkehx0oAfQBg6vfRpC6s2yMAh3BwenRT1
BI6MOlfM5hmCoJ0qTvLZtfkvN9+h6mGotyU7arVJrT1fl5dTxr4f+HtSk1xtWSZxpkTS4Vt378sk
iBcE/wDLNmV9xBDY4rpwEZuKqzTjfo3e+n9M93MsZSq0VQUU6miukko2abfo7NWWx9B17p8cFABQ
BUvbGDUYjBcoJIzg7T0yOh/A0AcJpdtpGn3MrTuglt5iIvMOCgHTbjt160AbWs+JksUjNoFnaf7m
OQcHB6e9ADBrknkk3e2Aqu5ypOQD2Ge/r7V83mOPWGj7Km/ffbf5eZ6OHw7qNStp07fM5K0tJ/G0
wdwYtKiPA/5785wucgxnkOcg56V5+X5fKpJYvFrXeMX0PQr144ePsqXxP4merwQJbRrFEoREAVVH
QADAA/Cvs9tEfPt31ZLTEFABQBWuLqO1x5hxuzjjPTGf51cYuWxLko7nJaRc2jSXTSqrE3DYJQE4
wPUVXs5MnnSIfELabOsTyv5PksGXapHQ5IwMdcVrDD1KjtBEurGO7ORtNAstZuXubm8kuIWcsIlD
R7RnIUkNzj3FeTLKHSrOtWV2+j1XyPRjmH7vkp6W6nqkF9aWyLFF8iIMABcAD6CvRVKS0SOF1E9W
yzFqEMzBEJ3Hpx6DP9KTg4q7BST0RdrMsKACgDG1aCSfZ5alsbs47Z2/4V0Umo3u7bfqYzTdreZ5
9ZaLcXUtwytNHtmYEIQBnj9a0TjrrbUiz00Idd8O3zRxmFHnMXUNgluc89K9bCV6dK8Zytfqcdal
KorRutGtN1fqvMj8LeH9QtZJbi4iaLzRwmOnOfWrxeIp1FGEJJ26io0ZUoqLu7K13u/N+Z0epM2l
QPczqVSMZ+p6AD3JIA9zXi1K0KUXOT0S+/y+Z62FwlXGVoYaivem7eSW7k/KKu35I4GGfVNWcT+c
9lE2Snl5BAweeGRjnpktznIAGK8S9fFL2jn7OD+GKvdr5W+9v0Vj7ypPLMkl9Ujh1i68dKk6luVS
7K6kk12jHTZycrm7p/iW/wDD86Q6lJ9qs5WCiY/fjPqT1wOpDbuMlWyCKy56mGko1nzQbtzdV6/8
H5Mp4XBZ1SnVy2HsMVTjzOj9ma/u9Ndk42s7KUdUz19HDjI5Br1T4HbRj6ACgDk4YdTsJZ/Ihikj
llaRS0m04PtigDB8X313DDD54MCuf3vlkvt+bjB47UAM8A301zLcR7mktkH7t3BBJ3Y/l70AHxIk
c2IVeglQt9MEf+hFa8/GX9lp3V/T/h7H2HDjisclLd05qP8Ai0f/AKSpGroenRXUCSLyrKCv0wMV
2xacU47WVvQ+XrxnCrUjV+NTkpX0967v+Jy/jq0js7QjoWZQo985P/joNceLaVJp73VvW/8Alc+l
4ejN4+DhfljCbn/hcWlf/t5xPQPD8jmxhEn3ljQN9Qoz+tdcLqEU9+VX9bHz2KcZYis6fwOpNx9H
J2/A6CtDjCgAoAguLWG7XZPGkq+jqrD8mBFADbazgs12W8ccK+kaKg/JQBQBz/iHTxeRMjDcrAgj
6/19PeplFTTjLZ6G9GrPD1I16TtODUovzX6PZrqtDziwl1nw5mGwMdxBk7Ul/gz1x8yY/BsHrtBJ
rzFTr0Pdo2nDon0/Ffg/kfbzxeVZratmCnh8Ra0pU02p22ekZ3+cU1tzNJMBY32uXS3OqsDsOUhT
7i/XGR9eWLdC2BiqjRqVJKpiGtNorb+vvuYVsywmBozwmTRleorTrzupNbaXs72btpFRvdK7uvXN
Pg8qICvTPiDUoAKACgAoAKAIZlDLg0Ache28Yb7ooAuabBGDkKKAOnUYHFAH/9k=]]></content><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, content : updated&#10;" timestamp="2022-02-09T15:19:44.765Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.833Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.321Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.961Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/></ConfigurationChanges></MediaEntity><MediaEntity description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.093Z" name="WC_Snowmobile" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Use Existing Flow Configuration" isMultiRow="false" name="UseExistingFlowConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Connector Name" baseType="STRING" description="Connector Name" name="connectorName" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><connectorName/><ignoreSSLErrors>false</ignoreSSLErrors></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Content Source Connection information" isMultiRow="false" name="ContentSourceConnectionInformation" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="none" aspect.friendlyName="AuthenticationType" aspect.selectOptions="none:none|basic:basic|SSO:SSO|SessionUser:SessionUser" baseType="STRING" description="Authentication type" name="authenticationType" ordinal="4"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Authorization Server ID" name="authorizationServerId" ordinal="7"/><FieldDefinition aspect.friendlyName="Dynamic Content" baseType="BOOLEAN" description="Display dynamic content from external URL" name="dynamicContent" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password for basic authentication" name="password" ordinal="6"/><FieldDefinition aspect.friendlyName="TestConnectionURL" baseType="STRING" description="The URL to test the connection" name="testUrl" ordinal="8"/><FieldDefinition aspect.defaultValue="60.0" aspect.friendlyName="Timeout" baseType="NUMBER" description="Timeout" name="timeout" ordinal="3"/><FieldDefinition aspect.friendlyName="URL" baseType="STRING" description="The URL to the content source" name="url" ordinal="1"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username for basic authentication" name="userId" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><authenticationType><![CDATA[none]]></authenticationType><authorizationServerId/><dynamicContent>false</dynamicContent><ignoreSSLErrors>false</ignoreSSLErrors><password/><testUrl/><timeout>60.0</timeout><url/><userId/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="A single scope for the authorization server." name="scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="SSL Connection Configuration" isMultiRow="false" name="SSLConnectionConfiguration" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SSLKeyStorePassword" baseType="PASSWORD" description="SSL Keystore Password" name="SSLKeyStorePassword" ordinal="2"/><FieldDefinition aspect.friendlyName="SSLKeyStorePath" baseType="STRING" description="Absolute path to the client SSL keystore" name="SSLKeyStorePath" ordinal="1"/><FieldDefinition aspect.friendlyName="SSLTrustStorePassword" baseType="PASSWORD" description="SSL Truststore Password" name="SSLTrustStorePassword" ordinal="4"/><FieldDefinition aspect.friendlyName="SSLTrustStorePath" baseType="STRING" description="Absolute path to the SSL client truststore" name="SSLTrustStorePath" ordinal="3"/></FieldDefinitions></DataShape><Rows><Row><SSLKeyStorePassword/><SSLKeyStorePath/><SSLTrustStorePassword/><SSLTrustStorePath/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Session User Configuration" isMultiRow="false" name="SessionUserConfigurationTable" ordinal="4"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SessionUserQueryParameter" baseType="STRING" description="Session User Query Parameter" name="SessionUserQueryParameter" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><SessionUserQueryParameter/></Row></Rows></ConfigurationTable></ConfigurationTables><content><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAABuSURBVDhPtZBhCoAgDEZ3vc7YOfu9XDiZ89O5
ogePRMczJA4goscZYUBYRbYCwiwy7KCh47yannTAR2DAKviAjbQAGooUCB3sqLwKWNIBS32n/tFU
hN3XdfmOw78GVKWs+19X6yHUgq9K8DHAfAOHPTWsXT18NQAAAABJRU5ErkJggg==]]></content><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, content : updated&#10;" timestamp="2022-02-17T13:23:08.728Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.833Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.321Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.913Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/></ConfigurationChanges></MediaEntity><MediaEntity description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.109Z" name="WC_variant" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Use Existing Flow Configuration" isMultiRow="false" name="UseExistingFlowConfiguration" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Connector Name" baseType="STRING" description="Connector Name" name="connectorName" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><connectorName/><ignoreSSLErrors>false</ignoreSSLErrors></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Content Source Connection information" isMultiRow="false" name="ContentSourceConnectionInformation" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="none" aspect.friendlyName="AuthenticationType" aspect.selectOptions="none:none|basic:basic|SSO:SSO|SessionUser:SessionUser" baseType="STRING" description="Authentication type" name="authenticationType" ordinal="4"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Authorization Server ID" name="authorizationServerId" ordinal="7"/><FieldDefinition aspect.friendlyName="Dynamic Content" baseType="BOOLEAN" description="Display dynamic content from external URL" name="dynamicContent" ordinal="0"/><FieldDefinition aspect.friendlyName="Ignore SSL Errors" baseType="BOOLEAN" description="Ignore SSL errors" name="ignoreSSLErrors" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password for basic authentication" name="password" ordinal="6"/><FieldDefinition aspect.friendlyName="TestConnectionURL" baseType="STRING" description="The URL to test the connection" name="testUrl" ordinal="8"/><FieldDefinition aspect.defaultValue="60.0" aspect.friendlyName="Timeout" baseType="NUMBER" description="Timeout" name="timeout" ordinal="3"/><FieldDefinition aspect.friendlyName="URL" baseType="STRING" description="The URL to the content source" name="url" ordinal="1"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username for basic authentication" name="userId" ordinal="5"/></FieldDefinitions></DataShape><Rows><Row><authenticationType><![CDATA[none]]></authenticationType><authorizationServerId/><dynamicContent>false</dynamicContent><ignoreSSLErrors>false</ignoreSSLErrors><password/><testUrl/><timeout>60.0</timeout><url/><userId/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="A single scope for the authorization server." name="scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="SSL Connection Configuration" isMultiRow="false" name="SSLConnectionConfiguration" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SSLKeyStorePassword" baseType="PASSWORD" description="SSL Keystore Password" name="SSLKeyStorePassword" ordinal="2"/><FieldDefinition aspect.friendlyName="SSLKeyStorePath" baseType="STRING" description="Absolute path to the client SSL keystore" name="SSLKeyStorePath" ordinal="1"/><FieldDefinition aspect.friendlyName="SSLTrustStorePassword" baseType="PASSWORD" description="SSL Truststore Password" name="SSLTrustStorePassword" ordinal="4"/><FieldDefinition aspect.friendlyName="SSLTrustStorePath" baseType="STRING" description="Absolute path to the SSL client truststore" name="SSLTrustStorePath" ordinal="3"/></FieldDefinitions></DataShape><Rows><Row><SSLKeyStorePassword/><SSLKeyStorePath/><SSLTrustStorePassword/><SSLTrustStorePath/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Session User Configuration" isMultiRow="false" name="SessionUserConfigurationTable" ordinal="4"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="SessionUserQueryParameter" baseType="STRING" description="Session User Query Parameter" name="SessionUserQueryParameter" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><SessionUserQueryParameter/></Row></Rows></ConfigurationTable></ConfigurationTables><content><![CDATA[R0lGODlhEAAQALMAALoAj7lCndFnuOSp1oBtfa6urkhISP///wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAACH5BAEAAAcALAAAAAAQABAAAARU8MhJq50kF3JxIIUxcBchDuhgFIW0gWIxbAUAcMRHr3M2
6LzUysYSBEKsniwgEjiBspcAYAhYPxlQNGDc3DIHZNN5Y4FcIQPgCi6FvoYO+iWv2+sRADs=]]></content><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, content : updated&#10;" timestamp="2022-02-17T13:41:56.781Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.833Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.321Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.958Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.058Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.136Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.151Z" user="Administrator"/></ConfigurationChanges></MediaEntity></MediaEntities><Groups/><PersistenceProviders/><ModelTags/><LocalizationTables/><Dashboards/><StyleThemes/><DataShapes><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.984Z" name="WC_PVZ_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxX1" ordinal="10"/><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxX2" ordinal="13"/><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxY1" ordinal="11"/><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxY2" ordinal="14"/><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxZ1" ordinal="12"/><FieldDefinition aspect.isPrimaryKey="false" baseType="NUMBER" description="" name="boundingBoxZ2" ordinal="15"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="derivedImageID" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="details" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="id" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="message" ordinal="6"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="metadataJSON" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="partIDUsed" ordinal="4"/><FieldDefinition aspect.dataShape="WC_NameValuePairs_DS" aspect.isPrimaryKey="false" baseType="INFOTABLE" description="" name="PVSystemProperties" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="pvzPath" ordinal="1"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;fields : pvzPath : added, id : added, metadataJSON : added, partIDUsed : added, derivedImageID : added, message : added, details : added&#10;" timestamp="2022-02-20T01:08:01.274Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : boundingBox : added&#10;" timestamp="2022-02-21T14:24:09.840Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : PVSystemProperties : added&#10;" timestamp="2022-02-21T19:35:19.244Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : PVSystemProperties : updated&#10;" timestamp="2022-02-21T21:08:33.295Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : boundingBoxX1 : added, boundingBoxY1 : added, boundingBoxZ1 : added, boundingBoxX2 : added, boundingBoxY2 : added, boundingBoxZ2 : added&#10;" timestamp="2022-02-23T14:37:52.913Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : boundingBox : deleted&#10;" timestamp="2022-02-23T15:52:55.099Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.242Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.871Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.999Z" name="WC_Structure_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartId" ordinal="12"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartName" ordinal="8"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartNumber" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseID" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseLineNumber" ordinal="6"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseQuantity" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseReferenceDesignatorRange" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseUnitDisplay" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseUnitValue" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PathId" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PVParentTreeId" ordinal="10"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PVTreeId" ordinal="11"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;fields : VersionID : deleted, EndItem : deleted, CheckoutState : deleted, Name : deleted, Number : deleted, Identity : deleted, TypeIcon : deleted, Revision : deleted, PathId : added, PartName : added, PartNumber : added, PVTreeId : added, PartId : added, PartUseQuantity : added, PartUseLineNumber : added, PartUseReferenceDesignatorRange : added, PartUseID : added, PartUseUnitDisplay : added&#10;" timestamp="2022-01-20T23:00:31.966Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : PartUseUnitValue : added, PVParentTreeId : added&#10;" timestamp="2022-01-20T23:12:43.085Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.583Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.258Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.885Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.027Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.136Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.999Z" name="WS_Documents_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility><Principal isPermitted="true" name="es-public-access-org" type="Organization"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="CheckoutState" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ID" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Identity" ordinal="6"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Label" ordinal="10"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Name" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Number" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Revision" ordinal="8"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="TypeIcon" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="URL" ordinal="11"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="VersionID" ordinal="1"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2022-01-25T21:50:44.895Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : EndItem : deleted, Label : added, URL : added&#10;" timestamp="2022-01-25T22:16:17.957Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.583Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.258Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.887Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.136Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.984Z" name="CAD_Repo_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="id" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="pvzPath" ordinal="1"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;fields : pvzPath : added, id : added&#10;" timestamp="2022-01-15T13:22:04.169Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.567Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.258Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.880Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.027Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.089Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.952Z" name="WC_CriteriaFilters_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ID" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Name" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Number" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="pressed" ordinal="16"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="src" ordinal="13"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="srcnotpressed" ordinal="14"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="srcpressed" ordinal="15"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="text" ordinal="11"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="value" ordinal="12"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2022-02-09T17:41:31.897Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : VersionID : deleted, EndItem : deleted, CheckoutState : deleted, Identity : deleted, TypeIcon : deleted, Revision : deleted, View : deleted, src : added, srcnotpressed : added&#10;" timestamp="2022-02-09T17:42:37.242Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : srcpressed : added&#10;" timestamp="2022-02-09T18:28:00.215Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : pressed : added&#10;" timestamp="2022-02-10T14:45:00.989Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.661Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.242Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.874Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.027Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.968Z" name="WC_PVSystemProperties_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ChildCount" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ComponentBounds" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ComponentName" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="INTEGER" description="" name="DirectChildCount" ordinal="6"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="DisplayName" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="InstanceLocation" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ModelBounds" ordinal="8"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ModelExtents" ordinal="10"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ModelLocation" ordinal="11"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="OLFileName" ordinal="12"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartDepth" ordinal="13"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartIDPath" ordinal="14"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartName" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartPath" ordinal="3"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;fields : ChildCount : added, ComponentName : added, DirectChildCount : added, DisplayName : added, InstanceLocation : added, ModelBounds : added, ModelExtents : added, ModelLocation : added, OLFileName : added, PartDepth : added, PartIDPath : added, PartName : added, PartPath : added&#10;" timestamp="2022-01-16T15:46:41.726Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.567Z" user="demo"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ComponentBounds : added&#10;" timestamp="2022-02-23T23:24:43.885Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ComponentBounds : updated&#10;" timestamp="2022-02-23T23:27:20.067Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ModelBounds : updated&#10;" timestamp="2022-02-23T23:28:02.487Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ComponentBounds : updated&#10;" timestamp="2022-02-23T23:29:01.329Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ModelBounds : updated&#10;" timestamp="2022-02-23T23:29:11.234Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.258Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.884Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.027Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.984Z" name="WC_METADATA" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="JSON" description="" name="JSON" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="JSONString" ordinal="4"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="fields : String : added, JSON : added, result : deleted, JSON_as_test : added, String : deleted&#10;header : name : updated, projectName : updated&#10;" timestamp="2022-01-24T01:30:05.440Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : JSONString : added, JSON_as_test : deleted&#10;" timestamp="2022-01-24T01:37:00.560Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.551Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.242Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.876Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.968Z" name="WC_BOM_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartId" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartName" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartNumber" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseId" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseQuantity" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseUnitDisplay" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="PartUseUnitValue" ordinal="6"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2022-12-12T21:48:50.148Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : PVTreeId : deleted, PVParentTreeId : deleted, PartUseReferenceDesignatorRange : deleted, PartUseLineNumber : deleted, PartUseID : deleted, PathId : deleted, PartUseId : added, PartUseId : updated&#10;" timestamp="2022-12-12T21:54:14.118Z" user="sgreywilson"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.999Z" name="WC_NameValuePairs_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Name" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Value" ordinal="2"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2022-01-17T00:35:50.680Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.567Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.258Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.882Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.027Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:56.015Z" name="WC_Represenations_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="JSON" description="" name="BoundingBox" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="BOOLEAN" description="" name="HasBoundingBox" ordinal="5"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ID" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ThreeDThumbnailURL" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="TwoDThumbnailURL" ordinal="3"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2021-12-30T18:27:51.334Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : VersionID : deleted, EndItem : deleted, CheckoutState : deleted, Name : deleted, Number : deleted, Identity : deleted, TypeIcon : deleted, Revision : deleted, ThreeDThumbnailURL : added, TwoDThumbnailURL : added&#10;" timestamp="2021-12-30T18:30:55.957Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-12-31T17:24:27.563Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2021-12-31T17:24:27.594Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-01-13T19:57:16.794Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-01-13T19:57:16.810Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : BoundingBox : added, HasBoundingBox : added&#10;" timestamp="2022-01-23T15:32:02.307Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : BoundingBox : updated&#10;" timestamp="2022-01-23T16:12:57.221Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.583Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.274Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.889Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></DataShape><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-01-11T14:26:55.968Z" name="WC_Parts_DS" projectName="WCProject" tags=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="CheckoutState" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="EndItem" ordinal="2"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ID" ordinal="9"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Identity" ordinal="6"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Name" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Number" ordinal="5"/><FieldDefinition aspect.defaultValue="false" aspect.isPrimaryKey="false" baseType="STRING" description="" name="pressed" ordinal="15"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Revision" ordinal="8"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="src" ordinal="13"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="srcpressed" ordinal="14"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="text" ordinal="11"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="TypeIcon" ordinal="7"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="value" ordinal="12"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="VersionID" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="View" ordinal="10"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;fields : VersionID : added, EndItem : added, CheckoutState : added, Name : added, Number : added, Identity : added, TypeIcon : added, Revision : added&#10;" timestamp="2021-12-29T18:47:48.318Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : projectName : updated&#10;" timestamp="2021-12-29T18:48:26.302Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : VersionID : updated&#10;" timestamp="2021-12-29T19:17:11.585Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : ID : added&#10;" timestamp="2021-12-30T17:27:11.481Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2021-12-31T17:24:27.563Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2021-12-31T17:24:27.578Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-01-13T19:57:16.779Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-01-13T19:57:16.810Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : View : added&#10;" timestamp="2022-01-25T23:05:18.863Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-06T00:54:15.567Z" user="demo"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : text : added, value : added&#10;" timestamp="2022-02-09T14:53:24.905Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : src : added, srcpressed : added&#10;" timestamp="2022-02-17T00:57:49.785Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2022-02-18T21:04:38.864Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.242Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.878Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.011Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.120Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.120Z" user="Administrator"/></ConfigurationChanges></DataShape></DataShapes><Things><Thing description="" documentationContent="" effectiveThingPackage="ODataConnector" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-01-11T14:26:56.202Z" name="WCOdata" projectName="WCProject" published="false" tags="" thingTemplate="ODataConnector" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Generic Connector Connection Settings" isMultiRow="false" name="GenericConnectorConnectionSettings" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="None" aspect.friendlyName="AuthenticationType" aspect.selectOptions="None:None|Fixed:Fixed|SSO:SSO" baseType="STRING" description="Authentication type for the connection" name="AuthenticationType" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Connection Authorization Server ID" name="AuthorizationServerID" ordinal="3"/><FieldDefinition aspect.defaultValue="60" aspect.friendlyName="RefreshIntervalInMinutes" baseType="LONG" description="Defines the interval for refreshing the endpoint cache. Value must be non-negative." name="RefreshIntervalInMinutes" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><AuthenticationType><![CDATA[None]]></AuthenticationType><AuthorizationServerID/><RefreshIntervalInMinutes>60</RefreshIntervalInMinutes></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Scope" baseType="STRING" description="A single scope for the authorization server." name="Scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration options required to get csrf token" isMultiRow="false" name="CSRFSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="CSRFTokenName" baseType="STRING" description="The name of the token that the back-end system will return the token value with" name="CSRFTokenName" ordinal="2"/><FieldDefinition aspect.friendlyName="RelativeUrlForCSRFGetRequest" baseType="STRING" description="Relative url against which to make the GET request so the csrf token can be retrieved from the response" name="RelativeUrlForCSRFGetRequest" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><CSRFTokenName/><RelativeUrlForCSRFGetRequest/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="HTTP Connector Connection Settings" isMultiRow="false" name="HTTPConnectorConnectionSettings" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password to authenticate against the connected system" name="AuthPassword" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username to authenticate against connected system" name="AuthUsername" ordinal="1"/><FieldDefinition aspect.friendlyName="BaseURL" baseType="STRING" description="Base URL of the connected system" name="BaseURL" ordinal="3"/><FieldDefinition aspect.friendlyName="ConnectionUrl" baseType="STRING" description="Connection Validation URL to the connected system" name="ConnectionUrl" ordinal="5"/><FieldDefinition aspect.friendlyName="RelativeUrl" baseType="STRING" description="Relative URL to the location of connected system" name="RelativeUrl" ordinal="4"/></FieldDefinitions></DataShape><Rows><Row><AuthPassword/><AuthUsername><![CDATA[wcadmin]]></AuthUsername><BaseURL/><ConnectionUrl/><RelativeUrl/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="OData Connector Connection Settings" isMultiRow="true" name="ODataConnectorConnectionSettings" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="ServiceRootRelativeURL" baseType="STRING" description="Relative URL OData service root" name="ServiceRootRelativeURL" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><ServiceRootRelativeURL><![CDATA[https://PP-2112301624B3.portal.ptc.io/Windchill]]></ServiceRootRelativeURL></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties><SwaggerJSON><Value><json><![CDATA[{}]]></json></Value><Timestamp>2023-01-11T14:26:56.296Z</Timestamp><Quality>GOOD</Quality></SwaggerJSON><AllowEndpointOverride><Value>false</Value><Timestamp>2023-01-11T14:26:56.296Z</Timestamp><Quality>GOOD</Quality></AllowEndpointOverride></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.167Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="Repo to store temporary pvz and meta.json. A number of the services have a dependence on a TWX extension found https://github.com/mvonhasselbach/CreoViewRWExtension" documentationContent="" effectiveThingPackage="FileRepositoryThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-03-02T22:06:07.812Z" name="CAD_Repo" projectName="WCProject" published="false" tags="" thingTemplate="FileRepository" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></Read><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="System" type="User"/><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="System" type="User"/><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="es-public-access-org" type="Organization"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ThingShape><PropertyDefinitions/><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetJSONFromCreoViewFile"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="DEFAULT" baseType="STRING" description="" name="format" ordinal="3"/><FieldDefinition aspect.defaultValue="PVZFolder/e67ceedd-f20a-4ad9-8e38-b2a022085bf0.pvz" baseType="STRING" description="" name="pvzFilePath" ordinal="2"/><FieldDefinition aspect.defaultValue="CAD_Repo" baseType="STRING" description="CAD_Repo" name="RepoName" ordinal="1"/><FieldDefinition baseType="STRING" description="" name="returnedProps" ordinal="4"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetMetaDataByID"><ResultType aspect.dataShape="WC_METADATA" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="63377cef-35f0-4a8f-a463-fa66b555ee47" baseType="STRING" description="id or name of pvz saved in folder" name="pvzId" ordinal="4"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="saveJsonMetaData"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="000992aa-6f15-40f4-b263-fbffacdbc976" baseType="STRING" description="id or name of pvz saved in folder" name="pvzId" ordinal="4"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UploadPVZ"><ResultType aspect.dataShape="CAD_Repo_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.viewmarkup.DerivedImage:696444" baseType="STRING" description="" name="RepID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UploadPVZfromDynamic"><ResultType aspect.dataShape="CAD_Repo_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:6200013" baseType="STRING" description="" name="PartID" ordinal="1"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="GetJSONFromCreoViewFile"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetJSONFromCreoViewFile ");

var params = {
	FileRepository: RepoName /* THINGNAME */,
	ReturnedProperties: (returnedProps || undefined) /* STRING */,
	CreoViewFile: pvzFilePath /* STRING */,
	JSONFormat: format /* STRING */
};

// result: JSON
var result = Resources["CreoViewRWHelper"].GetJSONFromCreoViewFile(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetMetaDataByID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetMetaDataByID pvzId =" + pvzId);

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_METADATA)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_METADATA"
});


json = me.LoadJSON({
	path: Things["WCHelper"].PVZFolder+"/"+pvzId +".metadata.json"  /* STRING */
});


result.AddRow({JSON: json , JSONString: JSON.stringify(json) });

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="saveJsonMetaData"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering saveJsonMetaData pvzId=" + pvzId);

let jsonFromCreo = me.GetJSONFromCreoViewFile({
    pvzFilePath: Things["WCHelper"].PVZFolder+"/"+pvzId +".pvz" /* STRING {"defaultValue":"/PVZFolder/e67ceedd-f20a-4ad9-8e38-b2a022085bf0.pvz"} */,
    returnedProps: undefined /* STRING */,
    format: "DEFAULT" /* STRING {"defaultValue":"DEFAULT"} */,
    RepoName: Things["WCHelper"].RepoName /* STRING {"defaultValue":"CAD_Repo"} */
});

me.SaveJSON({
    path: Things["WCHelper"].PVZFolder+"/"+pvzId + ".metadata.json"/* STRING */,
    content: jsonFromCreo /* JSON */
});    

logger.trace("saveJsonMetaData jsonFromCreo=" + jsonFromCreo);
result = jsonFromCreo;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UploadPVZ"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering UploadPVZ with RepID="+ RepID);
//
let CADFOLDER_PATH = "/"+Things["WCHelper"].PVZFolder;
let NOT_FOUND = true;
// generateGUID():STRING
let id = generateGUID();

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(CAD_Repo_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "CAD_Repo_DS"
});

try {

        // result: INFOTABLE dataShape: "FileSystemDirectory"
        let dirStructure  = me.GetDirectoryStructure();

        dirStructure.rows.toArray().forEach(row => {
            if (row.path == CADFOLDER_PATH) {
                NOT_FOUND = false;
            }
        });

        if (NOT_FOUND ) {
            me.CreateFolder({
                path: CADFOLDER_PATH /* STRING */
            });

        }
    
        } catch (ex) {
    		logger.error("UploadPVZ GetDirectoryStructure failed! using CADFOLDER_PATH " + CADFOLDER_PATH+ "  Error="+  ex);
    
}

let pvzpath = CADFOLDER_PATH+"/"+id + ".pvz";
logger.debug("UploadPVZ with upload path = " +  pvzpath);
try {

        url = Things["WCHelper"].WindchillServer+"/servlet/odata/v2/Visualization/Representations('"+RepID+"')/PTC.Visualization.GetPVZ(IncludeAnnotations=false)";
        let params = {
            headers: undefined /* JSON */,
            ignoreSSLErrors: true /* BOOLEAN */,
            url: url /* STRING */,
            password: Things["WCHelper"].WinchillUserPassword /* STRING */,
            username: Things["WCHelper"].WindchillUser /* STRING */
        };

        // result: BLOB
        let pvzResult = Resources["ContentLoaderFunctions"].LoadBinary(params);
        Things[Things["WCHelper"].RepoName].SaveBinary({
            path: pvzpath /* STRING */,
            content: pvzResult /* BLOB */
        });

    
        } catch (ex) {
    		logger.error("UploadPVZ SaveBinary failed! using pvzpath " + pvzpath+ "  Error="+  ex);
    
}

let pvzPath = "/Thingworx/FileRepositories/"+ Things["WCHelper"].RepoName + pvzpath;
result.AddRow({pvzPath: pvzPath , id: id });


try {
    
    me.saveJsonMetaData({
        pvzId: id /* STRING {"defaultValue":"e67ceedd-f20a-4ad9-8e38-b2a022085bf0"} */
    });
    
} catch (ex) {
    logger.error("UploadPVZ and saveJsonMetaData failed! Error="+  ex);
    
}

// make sure file exists 

let notFound = true;
i = 0;
while (notFound ) {
 
  var files =  me.ListFiles({
        path: CADFOLDER_PATH /* STRING */,
        nameMask: '*'+id+'*' /* STRING */
    });

  if ( files.length > 0) notFound = false;
  if (i > 100) break;
  i++;
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UploadPVZfromDynamic"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[//

logger.debug("Entering UploadPVZfromDynamic with PartID="+ PartID);
//
let CADFOLDER_PATH = "/"+Things["WCHelper"].PVZFolder;
let NOT_FOUND = true;
// generateGUID():STRING
let id = generateGUID();

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(CAD_Repo_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "CAD_Repo_DS"
});

try {

        // result: INFOTABLE dataShape: "FileSystemDirectory"
        let dirStructure  = me.GetDirectoryStructure();

        dirStructure.rows.toArray().forEach(row => {
            if (row.path == CADFOLDER_PATH) {
                NOT_FOUND = false;
            }
        });

        if (NOT_FOUND ) {
            me.CreateFolder({
                path: CADFOLDER_PATH /* STRING */
            });

        }
    
        } catch (ex) {
    		logger.error("UploadPVZfromDynamic GetDirectoryStructure failed! using CADFOLDER_PATH " + CADFOLDER_PATH+ "  Error="+  ex);
    
}

let pvzpath = CADFOLDER_PATH+"/"+id + ".pvz";
logger.debug("UploadPVZfromDynamic with upload path = " +  pvzpath);
try {

        url = Things["WCHelper"].WindchillServer+"/servlet/odata/v5/ProdMgmt/Parts('"+PartID+"')/PTC.ProdMgmt.GetDynamicStructureRepresentationPVZ(IncludeAnnotations=false)";
        let params = {
            headers: undefined /* JSON */,
            ignoreSSLErrors: true /* BOOLEAN */,
            url: url /* STRING */,
            password: Things["WCHelper"].WinchillUserPassword /* STRING */,
            username: Things["WCHelper"].WindchillUser /* STRING */
        };

        // result: BLOB
        let pvzResult = Resources["ContentLoaderFunctions"].LoadBinary(params);
        Things[Things["WCHelper"].RepoName].SaveBinary({
            path: pvzpath /* STRING */,
            content: pvzResult /* BLOB */
        });

    
        } catch (ex) {
    		logger.error("UploadPVZ SaveBinary failed! using pvzpath " + pvzpath+ "  Error="+  ex);
    
}

let pvzPath = "/Thingworx/FileRepositories/"+ Things["WCHelper"].RepoName + pvzpath;
result.AddRow({pvzPath: pvzPath , id: id });


//try {
//    
//    me.saveJsonMetaData({
//        pvzId: id /* STRING {"defaultValue":"e67ceedd-f20a-4ad9-8e38-b2a022085bf0"} */
//    });
//    
//} catch (ex) {
//    logger.error("UploadPVZ and saveJsonMetaData failed! Error="+  ex);
//    
//}
//
// make sure file exists 

let notFound = true;
i = 0;
while (notFound ) {
 
  var files =  me.ListFiles({
        path: CADFOLDER_PATH /* STRING */,
        nameMask: '*'+id+'*' /* STRING */
    });

  if ( files.length > 0) notFound = false;
  if (i > 100) break;
  i++;
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.167Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-01-11T14:26:56.124Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : UploadPVZfromDynamic : input parameter PartID updated, inputs updated&#10;" timestamp="2023-03-02T13:29:15.806Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetJSONFromCreoViewFile : output updated&#10;" timestamp="2023-03-02T22:06:07.812Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="" documentationContent="" effectiveThingPackage="WindchillSwaggerConnector" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-01-11T14:26:56.187Z" name="WC1211_Connector" projectName="WCProject" published="false" tags="" thingTemplate="WindchillSwaggerConnector" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Generic Connector Connection Settings" isMultiRow="false" name="GenericConnectorConnectionSettings" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="None" aspect.friendlyName="AuthenticationType" aspect.selectOptions="None:None|Fixed:Fixed|SSO:SSO" baseType="STRING" description="Authentication type for the connection" name="AuthenticationType" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthorizationServerID" baseType="STRING" description="Connection Authorization Server ID" name="AuthorizationServerID" ordinal="3"/><FieldDefinition aspect.defaultValue="60" aspect.friendlyName="RefreshIntervalInMinutes" baseType="LONG" description="Defines the interval for refreshing the endpoint cache. Value must be non-negative." name="RefreshIntervalInMinutes" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><AuthenticationType><![CDATA[None]]></AuthenticationType><AuthorizationServerID/><RefreshIntervalInMinutes>60</RefreshIntervalInMinutes></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="List of authorization server scopes" isMultiRow="true" name="AuthorizationServerScopesSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Scope" baseType="STRING" description="A single scope for the authorization server." name="Scope" ordinal="0"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable dataShapeName="" description="Configuration options required to get csrf token" isMultiRow="false" name="CSRFSettings" ordinal="2"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="CSRFTokenName" baseType="STRING" description="The name of the token that the back-end system will return the token value with" name="CSRFTokenName" ordinal="2"/><FieldDefinition aspect.friendlyName="RelativeUrlForCSRFGetRequest" baseType="STRING" description="Relative url against which to make the GET request so the csrf token can be retrieved from the response" name="RelativeUrlForCSRFGetRequest" ordinal="1"/></FieldDefinitions></DataShape><Rows><Row><CSRFTokenName/><RelativeUrlForCSRFGetRequest/></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="HTTP Connector Connection Settings" isMultiRow="false" name="HTTPConnectorConnectionSettings" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="AuthPassword" baseType="PASSWORD" description="Password to authenticate against the connected system" name="AuthPassword" ordinal="2"/><FieldDefinition aspect.friendlyName="AuthUsername" baseType="STRING" description="Username to authenticate against connected system" name="AuthUsername" ordinal="1"/><FieldDefinition aspect.friendlyName="BaseURL" baseType="STRING" description="Base URL of the connected system" name="BaseURL" ordinal="3"/><FieldDefinition aspect.friendlyName="ConnectionUrl" baseType="STRING" description="Connection Validation URL to the connected system" name="ConnectionUrl" ordinal="5"/><FieldDefinition aspect.friendlyName="RelativeUrl" baseType="STRING" description="Relative URL to the location of connected system" name="RelativeUrl" ordinal="4"/></FieldDefinitions></DataShape><Rows><Row><AuthPassword/><AuthUsername><![CDATA[wcadmin]]></AuthUsername><BaseURL><![CDATA[https://pp-2209280154zp.portal.ptc.io/Windchill]]></BaseURL><ConnectionUrl><![CDATA[/servlet/WindchillGW/wt.httpgw.HTTPServer/ping]]></ConnectionUrl><RelativeUrl><![CDATA[/servlet/rest]]></RelativeUrl></Row></Rows></ConfigurationTable><ConfigurationTable dataShapeName="" description="Swagger Connector Connection Settings" isMultiRow="false" name="SwaggerConnectorConnectionSettings" ordinal="3"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="RelativeUrlOfSwaggerSpec" baseType="STRING" description="Relative URL to the location of Swagger Specification on the connected system" name="RelativeUrlOfSwaggerSpec" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><RelativeUrlOfSwaggerSpec><![CDATA[/servlet/rest/swagger.json]]></RelativeUrlOfSwaggerSpec></Row></Rows></ConfigurationTable></ConfigurationTables><ThingShape><PropertyDefinitions/><ServiceDefinitions/><EventDefinitions/><ServiceMappings/><ServiceImplementations/><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations/><ImplementedShapes/><ThingProperties><SwaggerJSON><Value><json><![CDATA[{}]]></json></Value><Timestamp>2023-01-11T14:26:56.296Z</Timestamp><Quality>GOOD</Quality></SwaggerJSON></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.167Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2023-01-11T14:26:56.187Z" user="Administrator"/></ConfigurationChanges></Thing><Thing description="" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-01-31T20:59:12.345Z" name="WCHelper" projectName="WCProject" published="false" tags="" thingTemplate="GenericThing" valueStream=""><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></Read><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions><Permissions resourceName="*"><PropertyRead><Principal isPermitted="true" name="Administrator" type="User"/><Principal isPermitted="true" name="System" type="User"/><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></PropertyRead><PropertyWrite><Principal isPermitted="true" name="Administrator" type="User"/><Principal isPermitted="true" name="System" type="User"/></PropertyWrite><ServiceInvoke><Principal isPermitted="true" name="Administrator" type="User"/><Principal isPermitted="true" name="System" type="User"/><Principal isPermitted="true" name="vuforia_viewers" type="Group"/></ServiceInvoke><EventInvoke/><EventSubscribe/></Permissions></RunTimePermissions><VisibilityPermissions><Visibility><Principal isPermitted="true" name="Everyone" type="Organization"/></Visibility></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="PVZFolder" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="PVZFolder" ordinal="5"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="CAD_Repo" aspect.isPersistent="true" baseType="STRING" category="" description="This is the Repo Thing name which should not really be changed" isLocalOnly="false" name="RepoName" ordinal="6"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WinchillUserPassword" ordinal="6"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="For example https://PP-22010522066K.portal.ptc.io:443" isLocalOnly="false" name="WindchillServer" ordinal="2"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="for example wcadmin" isLocalOnly="false" name="WindchillUser" ordinal="3"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GeneratePVZAndGetURL"><ResultType aspect.dataShape="WC_PVZ_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:1225229" baseType="STRING" description="" name="PartId" ordinal="2"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="returnMetadataJSON" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetBom"><ResultType aspect.dataShape="WC_BOM_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:5709988" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDocuments"><ResultType aspect.dataShape="WS_Documents_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:105338" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDocumentsCopy"><ResultType aspect.dataShape="WS_Documents_DS" baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:105338" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetExtendedMetadata"><ResultType aspect.dataShape="WC_PVZ_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="336d3df8-3442-4049-ad47-5d0ac8ac50b4" baseType="STRING" description="" name="fileGUID" ordinal="2"/><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:993465" baseType="STRING" description="" name="partIDUsed" ordinal="3"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="returnMetadataJSON" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetNonce"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetOptions"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:com.ptc.windchill.option.model.OptionSet:4444559" baseType="STRING" description="" name="ID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetOptionSetsByContext"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="Snowmobile" baseType="STRING" description="" name="Context" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartByName"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="GOLF_CART" baseType="STRING" description="" name="PartName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartByNumber"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="GC000009" baseType="STRING" description="" name="Number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParts"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="Golf_Cart" baseType="STRING" description="" name="PartName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsByContextAndNameFilter"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="NameFilter" ordinal="3"/><FieldDefinition aspect.defaultValue="Snowmobile" baseType="STRING" description="" name="ProductContext" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsByContextAndNameFilterJSON"><ResultType aspect.dataShape="WC_Parts_DS" baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="snow" baseType="STRING" description="" name="NameFilter" ordinal="3"/><FieldDefinition aspect.defaultValue="Snowmobile" baseType="STRING" description="" name="ProductContext" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsByContextAndOptionalName"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="NameFilter" ordinal="3"/><FieldDefinition aspect.defaultValue="GOLF_CART" baseType="STRING" description="" name="ProductContext" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsByProduct"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="Golf_Cart" baseType="STRING" description="" name="ProductName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVSystemPropByName"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="{&quot;/&quot;:{&quot;&quot;:{&quot;Source_file_name&quot;:&quot;5258861.prt&quot;,&quot;Adapter_name&quot;:&quot;proe2pv&quot;,&quot;Adapter_version&quot;:&quot;parametric5_B000 Creo 4.2 - F000 (14.2.0.23)&quot;,&quot;Adapter_platform&quot;:&quot;x86e_win64&quot;},&quot;WindchillPart&quot;:{&quot;part_hasVariance&quot;:&quot;false&quot;,&quot;part_source&quot;:&quot;Make&quot;,&quot;part_identity&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1 (Design)&quot;,&quot;part_defaultTraceCode&quot;:&quot;Untraced&quot;,&quot;part_versionDisplayIdentity&quot;:&quot;Rev (View) 1 (Design)&quot;,&quot;part_entrySet&quot;:&quot;\n      + Participant: wt.org.WTGroup:2696588: [Read, Download]\n      + Participant: wt.org.WTGroup:2696594: [Read, Download]\n      + Participant: wt.org.WTUser:192308: [Read, Change Permissions, Download]&quot;,&quot;part_lifeCycleState&quot;:&quot;Released&quot;,&quot;part_cabinetReference&quot;:&quot;wt.folder.Cabinet:194046&lt;Default&gt;&quot;,&quot;part_state&quot;:&quot;Released&quot;,&quot;part_persistInfo&quot;:&quot;wt.fc.PersistInfo&quot;,&quot;part_hasPendingChange&quot;:&quot;false&quot;,&quot;part_creatorEMail&quot;:&quot;steve@wchill.com&quot;,&quot;part_hasContents&quot;:&quot;false&quot;,&quot;part_displayIdentifier&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;part_modifyTimestamp&quot;:&quot;2018-11-27 04:53:00 UTC&quot;,&quot;part_organizationName&quot;:&quot;OEM&quot;,&quot;part_cabinetName&quot;:&quot;Default&quot;,&quot;part_creator&quot;:&quot;&lt;A href=\&quot;mailto:steve@wchill.com\&quot;  ID=\&quot;PDML:creator:Link:Steve_Stone\&quot; &gt;Steve Stone&lt;\/A&gt;\r\n&quot;,&quot;part_validateUsage&quot;:&quot;false&quot;,&quot;part_lifeCycleTemplate&quot;:&quot;Two Phase Development&quot;,&quot;part_endItem&quot;:&quot;false&quot;,&quot;part_creatorFullName&quot;:&quot;Steve Stone&quot;,&quot;part_container&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;part_containerReference&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;part_organizationReference&quot;:&quot;OEM&quot;,&quot;part_folderPath&quot;:&quot;/Default/Design/BOM Data/03 - Functional BOM Parts/DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_hasHangingChange&quot;:&quot;false&quot;,&quot;part_phantom&quot;:&quot;false&quot;,&quot;part_iterationDisplayIdentifier&quot;:&quot;1.1 (Design)&quot;,&quot;part_versionIdentifier&quot;:&quot;wt.vc.VersionIdentifier&quot;,&quot;part_oneOffVersionIdentifier&quot;:&quot;wt.vc.OneOffVersionIdentifier&quot;,&quot;part_creatorName&quot;:&quot;singham&quot;,&quot;part_type&quot;:&quot;Part&quot;,&quot;part_modifierName&quot;:&quot;singham&quot;,&quot;part_branchIdentifier&quot;:&quot;670023&quot;,&quot;part_lifeCycleAtGate&quot;:&quot;false&quot;,&quot;part_collapsible&quot;:&quot;false&quot;,&quot;part_hasSuspect&quot;:&quot;false&quot;,&quot;part_businessType&quot;:&quot;WTPart&quot;,&quot;part_number&quot;:&quot;5258861&quot;,&quot;part_conceptualClassname&quot;:&quot;wt.part.WTPart&quot;,&quot;part_locked&quot;:&quot;false&quot;,&quot;part_servicekit&quot;:&quot;false&quot;,&quot;part_latestIteration&quot;:&quot;true&quot;,&quot;part_typeInfoWTPart&quot;:&quot;wt.part.WTPartTypeInfo&quot;,&quot;part_qualifiedidentifier&quot;:&quot;1.1 (Design)&quot;,&quot;part_class&quot;:&quot;wt.part.WTPart&quot;,&quot;part_cabinet&quot;:&quot;wt.folder.Cabinet:194046&quot;,&quot;part_masterReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.part.WTPartMaster%3A669888&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:Part_Master_5258861_u44__DEFLECTOR-SNOW_EXHAUST\&quot; &gt;Part Master - 5258861, DEFLECTOR-SNOW EXHAUST&lt;\/A&gt;\r\n&quot;,&quot;part_interopInfo&quot;:&quot;wt.sandbox.InteropInfo&quot;,&quot;part_authoringLanguage&quot;:&quot;en-US&quot;,&quot;part_versionInfo&quot;:&quot;1&quot;,&quot;part_folderingInfo&quot;:&quot;/Default/Design/BOM Data/03 - Functional BOM Parts&quot;,&quot;part_modifierEMail&quot;:&quot;steve@wchill.com&quot;,&quot;part_createTimestamp&quot;:&quot;2018-11-27 04:45:03 UTC&quot;,&quot;part_displayIdentity&quot;:&quot;Mechanical Part - 5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;part_hidePartInStructure&quot;:&quot;false&quot;,&quot;part_master&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_organization&quot;:&quot;Organization\n\tname = OEM\n\tinflated = true\n\trepository = Windchill\n\tdn = wt.org.WTOrganization:192050\n\tdescription = OEM organization for Product and Service Advantage Development\n\tinternetDomain = OEM.icenterv01.com\n\tcodingSystem = null\n\tuniqueIdentifier = null\n\tclassification = null\n\tlocation = null\n\twebSite = null\n\tconferencingURL = null\n\tconferencingIdentifier = null\n\trepairNeeded = false\n&quot;,&quot;part_parentFolder&quot;:&quot;wt.folder.SubFolder:200343&quot;,&quot;part_lifeCycleName&quot;:&quot;Two Phase Development&quot;,&quot;part_inheritedDomain&quot;:&quot;true&quot;,&quot;part_modifier&quot;:&quot;&lt;A href=\&quot;mailto:steve@wchill.com\&quot;  ID=\&quot;PDML:modifier:Link:Steve_Stone\&quot; &gt;Steve Stone&lt;\/A&gt;\r\n&quot;,&quot;part_iterationInfo&quot;:&quot;1.1&quot;,&quot;part_oneOffVersionInfo&quot;:&quot;wt.vc.OneOffVersionInfo&quot;,&quot;part_serviceable&quot;:&quot;true&quot;,&quot;part_organizationUniqueIdentifier&quot;:&quot;OEM&quot;,&quot;part_view&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.vc.views.View%3A39000&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:View_Design\&quot; &gt;View - Design&lt;\/A&gt;\r\n&quot;,&quot;part_lock&quot;:&quot;wt.locks.Lock&quot;,&quot;part_partType&quot;:&quot;Component&quot;,&quot;part_defaultUnit&quot;:&quot;each&quot;,&quot;part_displayType&quot;:&quot;Mechanical Part&quot;,&quot;part_ownership&quot;:&quot;(Secured information)&quot;,&quot;part_attributeContainer&quot;:&quot;DefaultAttributeContainer[[wt.iba.value.litevalue.FloatValueDefaultView:Part Cost=0.00,state=UNCHANGED_STATE], DefaultAttributeContainerFromServer]&quot;,&quot;part_versionDisplayIdentifier&quot;:&quot;1 (Design)&quot;,&quot;part_classInfo&quot;:&quot;ClassInfo wt.part.WTPart&quot;,&quot;part_genericType&quot;:&quot;No&quot;,&quot;part_modifierFullName&quot;:&quot;Steve Stone&quot;,&quot;part_lifeCycleBasic&quot;:&quot;true&quot;,&quot;part_domainRef&quot;:&quot;wt.admin.AdministrativeDomain:194008&quot;,&quot;part_checkoutInfo&quot;:&quot;Checked in&quot;,&quot;part_viewName&quot;:&quot;Design&quot;,&quot;part_location&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.folder.SubFolder%3A200343&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:_u47_Default_u47_Design_u47_BOM_Data_u47_03_-_Functional_BOM_Parts\&quot; &gt;/Default/Design/BOM Data/03 - Functional BOM Parts&lt;\/A&gt;\r\n&quot;,&quot;part_containerName&quot;:&quot;Snowmobile&quot;,&quot;part_versionDisplayType&quot;:&quot;Rev (View)&quot;,&quot;part_iterationDisplayIdentifierSansView&quot;:&quot;1.1&quot;,&quot;part_iterationIdentifier&quot;:&quot;wt.vc.IterationIdentifier&quot;,&quot;part_modifyTimestamp_epoch&quot;:&quot;1543294380000&quot;,&quot;part_hasResultingChange&quot;:&quot;false&quot;,&quot;part_typeDefinitionReference&quot;:&quot;wt.type.TypeDefinitionReference&quot;,&quot;part_name&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_Part_Cost&quot;:&quot;0.00&quot;},&quot;WindchillEPM&quot;:{&quot;epmdoc_hasSuspect&quot;:&quot;false&quot;,&quot;epmdoc_cabinetReference&quot;:&quot;wt.folder.Cabinet:194046&lt;Default&gt;&quot;,&quot;epmdoc_modifierEMail&quot;:&quot;dave@wchill.com&quot;,&quot;epmdoc_instance&quot;:&quot;false&quot;,&quot;epmdoc_cabinetName&quot;:&quot;Default&quot;,&quot;epmdoc_hasVariance&quot;:&quot;false&quot;,&quot;epmdoc_creatorEMail&quot;:&quot;dave@wchill.com&quot;,&quot;epmdoc_extentsValid&quot;:&quot;false&quot;,&quot;epmdoc_organizationUniqueIdentifier&quot;:&quot;OEM&quot;,&quot;epmdoc_dbKeySize&quot;:&quot;6351&quot;,&quot;epmdoc_organizationReference&quot;:&quot;OEM&quot;,&quot;epmdoc_defaultUnit&quot;:&quot;each&quot;,&quot;epmdoc_hasContents&quot;:&quot;false&quot;,&quot;epmdoc_organizationName&quot;:&quot;OEM&quot;,&quot;epmdoc_revisionNumber&quot;:&quot;8434&quot;,&quot;epmdoc_iterationDisplayIdentifier&quot;:&quot;1.1&quot;,&quot;epmdoc_placeHolder&quot;:&quot;false&quot;,&quot;epmdoc_businessType&quot;:&quot;EPMDocument&quot;,&quot;epmdoc_modifier&quot;:&quot;&lt;A href=\&quot;mailto:dave@wchill.com\&quot;  ID=\&quot;PDML:modifier:Link:Dave_Design_Engineer\&quot; &gt;Dave Design Engineer&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_template&quot;:&quot;wt.enterprise.TemplateInfo&quot;,&quot;epmdoc_genericType&quot;:&quot;No&quot;,&quot;epmdoc_folderingInfo&quot;:&quot;/Default/Design/CAD Data&quot;,&quot;epmdoc_modifyTimestamp_epoch&quot;:&quot;1543165666000&quot;,&quot;epmdoc_creator&quot;:&quot;&lt;A href=\&quot;mailto:dave@wchill.com\&quot;  ID=\&quot;PDML:creator:Link:Dave_Design_Engineer\&quot; &gt;Dave Design Engineer&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_container&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;epmdoc_versionInfo&quot;:&quot;1&quot;,&quot;epmdoc_createTimestamp&quot;:&quot;2018-11-25 17:03:51 UTC&quot;,&quot;epmdoc_inheritedDomain&quot;:&quot;true&quot;,&quot;epmdoc_cabinet&quot;:&quot;wt.folder.Cabinet:194046&quot;,&quot;epmdoc_boxExtents&quot;:&quot;wt.epm.EPMBoxExtents  A coordinate -0.3618171433733928 -0.33181740104367113 -1.232001679478786  B coordinate 0.2683505590462818 0.47108922218329097 0.0&quot;,&quot;epmdoc_lifeCycleAtGate&quot;:&quot;false&quot;,&quot;epmdoc_parentFolder&quot;:&quot;wt.folder.SubFolder:200315&quot;,&quot;epmdoc_lock&quot;:&quot;wt.locks.Lock&quot;,&quot;epmdoc_CADName&quot;:&quot;5258861.prt&quot;,&quot;epmdoc_folderPath&quot;:&quot;/Default/Design/CAD Data/DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_classInfo&quot;:&quot;ClassInfo wt.epm.EPMDocument&quot;,&quot;epmdoc_conceptualClassname&quot;:&quot;wt.epm.EPMDocument&quot;,&quot;epmdoc_collapsible&quot;:&quot;false&quot;,&quot;epmdoc_class&quot;:&quot;wt.epm.EPMDocument&quot;,&quot;epmdoc_versionDisplayIdentifier&quot;:&quot;1&quot;,&quot;epmdoc_authoringApplication&quot;:&quot;Creo&quot;,&quot;epmdoc_versionDisplayIdentity&quot;:&quot;Rev 1&quot;,&quot;epmdoc_lengthScale&quot;:&quot;0.001&quot;,&quot;epmdoc_attributeContainer&quot;:&quot;DefaultAttributeContainer[, DefaultAttributeContainerFromServer]&quot;,&quot;epmdoc_oneOffVersionInfo&quot;:&quot;wt.vc.OneOffVersionInfo&quot;,&quot;epmdoc_creatorFullName&quot;:&quot;Dave Design Engineer&quot;,&quot;epmdoc_iterationIdentifier&quot;:&quot;wt.vc.IterationIdentifier&quot;,&quot;epmdoc_latestIteration&quot;:&quot;true&quot;,&quot;epmdoc_containerReference&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;epmdoc_modifierFullName&quot;:&quot;Dave Design Engineer&quot;,&quot;epmdoc_hasResultingChange&quot;:&quot;false&quot;,&quot;epmdoc_modifyTimestamp&quot;:&quot;2018-11-25 17:07:46 UTC&quot;,&quot;epmdoc_containerName&quot;:&quot;Snowmobile&quot;,&quot;epmdoc_hasPendingChange&quot;:&quot;false&quot;,&quot;epmdoc_format&quot;:&quot;wt.content.DataFormat:1407&quot;,&quot;epmdoc_generic&quot;:&quot;false&quot;,&quot;epmdoc_modifierName&quot;:&quot;Dave&quot;,&quot;epmdoc_displayType&quot;:&quot;CAD Part &quot;,&quot;epmdoc_lifeCycleName&quot;:&quot;One Phase Development&quot;,&quot;epmdoc_lifeCycleState&quot;:&quot;Released&quot;,&quot;epmdoc_versionDisplayType&quot;:&quot;Rev&quot;,&quot;epmdoc_state&quot;:&quot;Released&quot;,&quot;epmdoc_identity&quot;:&quot;5258861.PRT - DEFLECTOR-SNOW EXHAUST, 1&quot;,&quot;epmdoc_formatName&quot;:&quot;NONE&quot;,&quot;epmdoc_asStoredConfigReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.epm.workspaces.EPMAsStoredConfig%3A502572&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link\&quot; &gt;null&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_asStoredConfig&quot;:&quot;wt.epm.workspaces.EPMAsStoredConfig&quot;,&quot;epmdoc_type&quot;:&quot;EPM Document&quot;,&quot;epmdoc_branchIdentifier&quot;:&quot;488730&quot;,&quot;epmdoc_referenceControl&quot;:&quot;wt.epm.EPMCADReferenceControl&quot;,&quot;epmdoc_qualifiedidentifier&quot;:&quot;1.1&quot;,&quot;epmdoc_authoringAppVersion&quot;:&quot;PROE L-05 36&quot;,&quot;epmdoc_docType&quot;:&quot;CAD Part&quot;,&quot;epmdoc_typeDefinitionReference&quot;:&quot;wt.type.TypeDefinitionReference&quot;,&quot;epmdoc_ownership&quot;:&quot;(Secured information)&quot;,&quot;epmdoc_hasHangingChange&quot;:&quot;false&quot;,&quot;epmdoc_versionIdentifier&quot;:&quot;wt.vc.VersionIdentifier&quot;,&quot;epmdoc_domainRef&quot;:&quot;wt.admin.AdministrativeDomain:194008&quot;,&quot;epmdoc_ownerApplication&quot;:&quot;Workgroup Manager&quot;,&quot;epmdoc_interopInfo&quot;:&quot;wt.sandbox.InteropInfo&quot;,&quot;epmdoc_verified&quot;:&quot;true&quot;,&quot;epmdoc_number&quot;:&quot;5258861.PRT&quot;,&quot;epmdoc_locked&quot;:&quot;false&quot;,&quot;epmdoc_familyTableStatus&quot;:&quot;0&quot;,&quot;epmdoc_displayIdentity&quot;:&quot;CAD Part  - 5258861.prt, 1.1&quot;,&quot;epmdoc_missingDependents&quot;:&quot;false&quot;,&quot;epmdoc_checkoutInfo&quot;:&quot;Checked in&quot;,&quot;epmdoc_oneOffVersionIdentifier&quot;:&quot;wt.vc.OneOffVersionIdentifier&quot;,&quot;epmdoc_authoringAppVersionReference&quot;:&quot;wt.epm.EPMAuthoringAppVersion:36988&quot;,&quot;epmdoc_organization&quot;:&quot;Organization\n\tname = OEM\n\tinflated = true\n\trepository = Windchill\n\tdn = wt.org.WTOrganization:192050\n\tdescription = OEM organization for Product and Service Advantage Development\n\tinternetDomain = OEM.icenterv01.com\n\tcodingSystem = null\n\tuniqueIdentifier = null\n\tclassification = null\n\tlocation = null\n\twebSite = null\n\tconferencingURL = null\n\tconferencingIdentifier = null\n\trepairNeeded = false\n&quot;,&quot;epmdoc_lifeCycleTemplate&quot;:&quot;One Phase Development&quot;,&quot;epmdoc_master&quot;:&quot;5258861.PRT - DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_derived&quot;:&quot;false&quot;,&quot;epmdoc_lifeCycleBasic&quot;:&quot;true&quot;,&quot;epmdoc_masterReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.epm.EPMDocumentMaster%3A486916&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:CAD_Part__5258861_u46_prt\&quot; &gt;CAD Part  - 5258861.prt&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_topGeneric&quot;:&quot;false&quot;,&quot;epmdoc_displayIdentifier&quot;:&quot;5258861.prt, 1.1&quot;,&quot;epmdoc_iterationInfo&quot;:&quot;1.1&quot;,&quot;epmdoc_rootItemReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link\&quot; &gt;null&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_name&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_location&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.folder.SubFolder%3A200315&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:_u47_Default_u47_Design_u47_CAD_Data\&quot; &gt;/Default/Design/CAD Data&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_persistInfo&quot;:&quot;wt.fc.PersistInfo&quot;,&quot;epmdoc_creatorName&quot;:&quot;Dave&quot;,&quot;epmdoc_templated&quot;:&quot;false&quot;},&quot;__PV_SystemProperties&quot;:{&quot;Display Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Part Path&quot;:&quot;/5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Child Count&quot;:0,&quot;Component Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Model Extents (mm)&quot;:0,&quot;Instance Location&quot;:&quot;&quot;,&quot;Part Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Direct Child Count&quot;:0,&quot;Model Location&quot;:&quot;&quot;,&quot;Part Depth&quot;:0,&quot;OL File Name&quot;:&quot;5258861_prt.ol&quot;,&quot;Component Bounds&quot;:&quot;-0.359289 0.39161634 -1.2266912 -0.22152182 0.4539383 -1.1175103&quot;,&quot;Part ID Path&quot;:&quot;&quot;},&quot;PROE Parameters&quot;:{&quot;PROI_REVISION&quot;:&quot;01&quot;,&quot;PTC_WM_LOCATION&quot;:&quot;/Products/Snow/Design/CAD Data&quot;,&quot;ENGINEER&quot;:&quot;D.MERTENS&quot;,&quot;PTC_WM_MODIFIED_ON&quot;:&quot;25-Nov-18 12:07:46 PM&quot;,&quot;PROI_RELEASE&quot;:&quot;Released&quot;,&quot;CHECKER_DATE&quot;:&quot;04-SEP-13&quot;,&quot;PTC_WM_VERSION&quot;:&quot;1.1&quot;,&quot;DESIGNER&quot;:&quot;D.MERTENS&quot;,&quot;ENGINEER_DATE&quot;:&quot;04-SEP-13&quot;,&quot;PTC_MATERIAL_NAME&quot;:&quot;MM_ALUMINUM&quot;,&quot;PTC_WM_MODIFIED_BY&quot;:&quot;Dave Design Engineer (Dave: OEM)&quot;,&quot;PTC_WM_ITERATION&quot;:&quot;1&quot;,&quot;PART_NAME&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;PDMRL&quot;:&quot;Released&quot;,&quot;DETAILER&quot;:&quot;D.MERTENS&quot;,&quot;PROI_VERSION&quot;:&quot;3&quot;,&quot;MATERIAL_LINE_1&quot;:&quot;5052 H32 ALUMINUM&quot;,&quot;MATERIAL_LINE_2&quot;:&quot;.100 THK&quot;,&quot;DETAILER_DATE&quot;:&quot;3-SEP-13&quot;,&quot;PTC_WM_LIFECYCLE&quot;:&quot;One Phase Development&quot;,&quot;CHECKER&quot;:&quot;J.EATON&quot;,&quot;PRODUCT_ORDER_NUMBER&quot;:&quot;--&quot;,&quot;PROJECT_NUMBER&quot;:&quot;--&quot;,&quot;PTC_MODIFIED&quot;:&quot;false&quot;,&quot;PDMREV&quot;:&quot;01.3&quot;,&quot;PTC_WM_LIFECYCLE_STATE&quot;:&quot;Design&quot;,&quot;DESIGNER_DATE&quot;:&quot;JULY-13&quot;,&quot;PTC_WM_CREATED_ON&quot;:&quot;25-Nov-18 12:03:51 PM&quot;,&quot;PRODUCT_LINE&quot;:&quot;SNOW&quot;,&quot;PROI_MODIFIED&quot;:&quot;0&quot;,&quot;PTC_COMMON_NAME&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;PTC_WM_CREATED_BY&quot;:&quot;Dave Design Engineer (Dave: OEM)&quot;,&quot;PTC_WM_REVISION&quot;:&quot;1&quot;,&quot;PTC_ORGANIZATION_ID&quot;:&quot;OEM&quot;}}}" baseType="JSON" description="" name="metaDataobject" ordinal="1"/><FieldDefinition aspect.defaultValue="__PV_SystemProperties" baseType="STRING" description="" name="nodeName" ordinal="3"/><FieldDefinition aspect.defaultValue="Display Name" baseType="STRING" description="" name="PropertyName" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVSystemProperties"><ResultType aspect.dataShape="WC_NameValuePairs_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="{&quot;/&quot;:{&quot;&quot;:{&quot;Source_file_name&quot;:&quot;5258861.prt&quot;,&quot;Adapter_name&quot;:&quot;proe2pv&quot;,&quot;Adapter_version&quot;:&quot;parametric5_B000 Creo 4.2 - F000 (14.2.0.23)&quot;,&quot;Adapter_platform&quot;:&quot;x86e_win64&quot;},&quot;WindchillPart&quot;:{&quot;part_hasVariance&quot;:&quot;false&quot;,&quot;part_source&quot;:&quot;Make&quot;,&quot;part_identity&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1 (Design)&quot;,&quot;part_defaultTraceCode&quot;:&quot;Untraced&quot;,&quot;part_versionDisplayIdentity&quot;:&quot;Rev (View) 1 (Design)&quot;,&quot;part_entrySet&quot;:&quot;\n      + Participant: wt.org.WTGroup:2696588: [Read, Download]\n      + Participant: wt.org.WTGroup:2696594: [Read, Download]\n      + Participant: wt.org.WTUser:192308: [Read, Change Permissions, Download]&quot;,&quot;part_lifeCycleState&quot;:&quot;Released&quot;,&quot;part_cabinetReference&quot;:&quot;wt.folder.Cabinet:194046&lt;Default&gt;&quot;,&quot;part_state&quot;:&quot;Released&quot;,&quot;part_persistInfo&quot;:&quot;wt.fc.PersistInfo&quot;,&quot;part_hasPendingChange&quot;:&quot;false&quot;,&quot;part_creatorEMail&quot;:&quot;steve@wchill.com&quot;,&quot;part_hasContents&quot;:&quot;false&quot;,&quot;part_displayIdentifier&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;part_modifyTimestamp&quot;:&quot;2018-11-27 04:53:00 UTC&quot;,&quot;part_organizationName&quot;:&quot;OEM&quot;,&quot;part_cabinetName&quot;:&quot;Default&quot;,&quot;part_creator&quot;:&quot;&lt;A href=\&quot;mailto:steve@wchill.com\&quot;  ID=\&quot;PDML:creator:Link:Steve_Stone\&quot; &gt;Steve Stone&lt;\/A&gt;\r\n&quot;,&quot;part_validateUsage&quot;:&quot;false&quot;,&quot;part_lifeCycleTemplate&quot;:&quot;Two Phase Development&quot;,&quot;part_endItem&quot;:&quot;false&quot;,&quot;part_creatorFullName&quot;:&quot;Steve Stone&quot;,&quot;part_container&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;part_containerReference&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;part_organizationReference&quot;:&quot;OEM&quot;,&quot;part_folderPath&quot;:&quot;/Default/Design/BOM Data/03 - Functional BOM Parts/DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_hasHangingChange&quot;:&quot;false&quot;,&quot;part_phantom&quot;:&quot;false&quot;,&quot;part_iterationDisplayIdentifier&quot;:&quot;1.1 (Design)&quot;,&quot;part_versionIdentifier&quot;:&quot;wt.vc.VersionIdentifier&quot;,&quot;part_oneOffVersionIdentifier&quot;:&quot;wt.vc.OneOffVersionIdentifier&quot;,&quot;part_creatorName&quot;:&quot;singham&quot;,&quot;part_type&quot;:&quot;Part&quot;,&quot;part_modifierName&quot;:&quot;singham&quot;,&quot;part_branchIdentifier&quot;:&quot;670023&quot;,&quot;part_lifeCycleAtGate&quot;:&quot;false&quot;,&quot;part_collapsible&quot;:&quot;false&quot;,&quot;part_hasSuspect&quot;:&quot;false&quot;,&quot;part_businessType&quot;:&quot;WTPart&quot;,&quot;part_number&quot;:&quot;5258861&quot;,&quot;part_conceptualClassname&quot;:&quot;wt.part.WTPart&quot;,&quot;part_locked&quot;:&quot;false&quot;,&quot;part_servicekit&quot;:&quot;false&quot;,&quot;part_latestIteration&quot;:&quot;true&quot;,&quot;part_typeInfoWTPart&quot;:&quot;wt.part.WTPartTypeInfo&quot;,&quot;part_qualifiedidentifier&quot;:&quot;1.1 (Design)&quot;,&quot;part_class&quot;:&quot;wt.part.WTPart&quot;,&quot;part_cabinet&quot;:&quot;wt.folder.Cabinet:194046&quot;,&quot;part_masterReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.part.WTPartMaster%3A669888&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:Part_Master_5258861_u44__DEFLECTOR-SNOW_EXHAUST\&quot; &gt;Part Master - 5258861, DEFLECTOR-SNOW EXHAUST&lt;\/A&gt;\r\n&quot;,&quot;part_interopInfo&quot;:&quot;wt.sandbox.InteropInfo&quot;,&quot;part_authoringLanguage&quot;:&quot;en-US&quot;,&quot;part_versionInfo&quot;:&quot;1&quot;,&quot;part_folderingInfo&quot;:&quot;/Default/Design/BOM Data/03 - Functional BOM Parts&quot;,&quot;part_modifierEMail&quot;:&quot;steve@wchill.com&quot;,&quot;part_createTimestamp&quot;:&quot;2018-11-27 04:45:03 UTC&quot;,&quot;part_displayIdentity&quot;:&quot;Mechanical Part - 5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;part_hidePartInStructure&quot;:&quot;false&quot;,&quot;part_master&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_organization&quot;:&quot;Organization\n\tname = OEM\n\tinflated = true\n\trepository = Windchill\n\tdn = wt.org.WTOrganization:192050\n\tdescription = OEM organization for Product and Service Advantage Development\n\tinternetDomain = OEM.icenterv01.com\n\tcodingSystem = null\n\tuniqueIdentifier = null\n\tclassification = null\n\tlocation = null\n\twebSite = null\n\tconferencingURL = null\n\tconferencingIdentifier = null\n\trepairNeeded = false\n&quot;,&quot;part_parentFolder&quot;:&quot;wt.folder.SubFolder:200343&quot;,&quot;part_lifeCycleName&quot;:&quot;Two Phase Development&quot;,&quot;part_inheritedDomain&quot;:&quot;true&quot;,&quot;part_modifier&quot;:&quot;&lt;A href=\&quot;mailto:steve@wchill.com\&quot;  ID=\&quot;PDML:modifier:Link:Steve_Stone\&quot; &gt;Steve Stone&lt;\/A&gt;\r\n&quot;,&quot;part_iterationInfo&quot;:&quot;1.1&quot;,&quot;part_oneOffVersionInfo&quot;:&quot;wt.vc.OneOffVersionInfo&quot;,&quot;part_serviceable&quot;:&quot;true&quot;,&quot;part_organizationUniqueIdentifier&quot;:&quot;OEM&quot;,&quot;part_view&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.vc.views.View%3A39000&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:View_Design\&quot; &gt;View - Design&lt;\/A&gt;\r\n&quot;,&quot;part_lock&quot;:&quot;wt.locks.Lock&quot;,&quot;part_partType&quot;:&quot;Component&quot;,&quot;part_defaultUnit&quot;:&quot;each&quot;,&quot;part_displayType&quot;:&quot;Mechanical Part&quot;,&quot;part_ownership&quot;:&quot;(Secured information)&quot;,&quot;part_attributeContainer&quot;:&quot;DefaultAttributeContainer[[wt.iba.value.litevalue.FloatValueDefaultView:Part Cost=0.00,state=UNCHANGED_STATE], DefaultAttributeContainerFromServer]&quot;,&quot;part_versionDisplayIdentifier&quot;:&quot;1 (Design)&quot;,&quot;part_classInfo&quot;:&quot;ClassInfo wt.part.WTPart&quot;,&quot;part_genericType&quot;:&quot;No&quot;,&quot;part_modifierFullName&quot;:&quot;Steve Stone&quot;,&quot;part_lifeCycleBasic&quot;:&quot;true&quot;,&quot;part_domainRef&quot;:&quot;wt.admin.AdministrativeDomain:194008&quot;,&quot;part_checkoutInfo&quot;:&quot;Checked in&quot;,&quot;part_viewName&quot;:&quot;Design&quot;,&quot;part_location&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.folder.SubFolder%3A200343&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:_u47_Default_u47_Design_u47_BOM_Data_u47_03_-_Functional_BOM_Parts\&quot; &gt;/Default/Design/BOM Data/03 - Functional BOM Parts&lt;\/A&gt;\r\n&quot;,&quot;part_containerName&quot;:&quot;Snowmobile&quot;,&quot;part_versionDisplayType&quot;:&quot;Rev (View)&quot;,&quot;part_iterationDisplayIdentifierSansView&quot;:&quot;1.1&quot;,&quot;part_iterationIdentifier&quot;:&quot;wt.vc.IterationIdentifier&quot;,&quot;part_modifyTimestamp_epoch&quot;:&quot;1543294380000&quot;,&quot;part_hasResultingChange&quot;:&quot;false&quot;,&quot;part_typeDefinitionReference&quot;:&quot;wt.type.TypeDefinitionReference&quot;,&quot;part_name&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;part_Part_Cost&quot;:&quot;0.00&quot;},&quot;WindchillEPM&quot;:{&quot;epmdoc_hasSuspect&quot;:&quot;false&quot;,&quot;epmdoc_cabinetReference&quot;:&quot;wt.folder.Cabinet:194046&lt;Default&gt;&quot;,&quot;epmdoc_modifierEMail&quot;:&quot;dave@wchill.com&quot;,&quot;epmdoc_instance&quot;:&quot;false&quot;,&quot;epmdoc_cabinetName&quot;:&quot;Default&quot;,&quot;epmdoc_hasVariance&quot;:&quot;false&quot;,&quot;epmdoc_creatorEMail&quot;:&quot;dave@wchill.com&quot;,&quot;epmdoc_extentsValid&quot;:&quot;false&quot;,&quot;epmdoc_organizationUniqueIdentifier&quot;:&quot;OEM&quot;,&quot;epmdoc_dbKeySize&quot;:&quot;6351&quot;,&quot;epmdoc_organizationReference&quot;:&quot;OEM&quot;,&quot;epmdoc_defaultUnit&quot;:&quot;each&quot;,&quot;epmdoc_hasContents&quot;:&quot;false&quot;,&quot;epmdoc_organizationName&quot;:&quot;OEM&quot;,&quot;epmdoc_revisionNumber&quot;:&quot;8434&quot;,&quot;epmdoc_iterationDisplayIdentifier&quot;:&quot;1.1&quot;,&quot;epmdoc_placeHolder&quot;:&quot;false&quot;,&quot;epmdoc_businessType&quot;:&quot;EPMDocument&quot;,&quot;epmdoc_modifier&quot;:&quot;&lt;A href=\&quot;mailto:dave@wchill.com\&quot;  ID=\&quot;PDML:modifier:Link:Dave_Design_Engineer\&quot; &gt;Dave Design Engineer&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_template&quot;:&quot;wt.enterprise.TemplateInfo&quot;,&quot;epmdoc_genericType&quot;:&quot;No&quot;,&quot;epmdoc_folderingInfo&quot;:&quot;/Default/Design/CAD Data&quot;,&quot;epmdoc_modifyTimestamp_epoch&quot;:&quot;1543165666000&quot;,&quot;epmdoc_creator&quot;:&quot;&lt;A href=\&quot;mailto:dave@wchill.com\&quot;  ID=\&quot;PDML:creator:Link:Dave_Design_Engineer\&quot; &gt;Dave Design Engineer&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_container&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;epmdoc_versionInfo&quot;:&quot;1&quot;,&quot;epmdoc_createTimestamp&quot;:&quot;2018-11-25 17:03:51 UTC&quot;,&quot;epmdoc_inheritedDomain&quot;:&quot;true&quot;,&quot;epmdoc_cabinet&quot;:&quot;wt.folder.Cabinet:194046&quot;,&quot;epmdoc_boxExtents&quot;:&quot;wt.epm.EPMBoxExtents  A coordinate -0.3618171433733928 -0.33181740104367113 -1.232001679478786  B coordinate 0.2683505590462818 0.47108922218329097 0.0&quot;,&quot;epmdoc_lifeCycleAtGate&quot;:&quot;false&quot;,&quot;epmdoc_parentFolder&quot;:&quot;wt.folder.SubFolder:200315&quot;,&quot;epmdoc_lock&quot;:&quot;wt.locks.Lock&quot;,&quot;epmdoc_CADName&quot;:&quot;5258861.prt&quot;,&quot;epmdoc_folderPath&quot;:&quot;/Default/Design/CAD Data/DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_classInfo&quot;:&quot;ClassInfo wt.epm.EPMDocument&quot;,&quot;epmdoc_conceptualClassname&quot;:&quot;wt.epm.EPMDocument&quot;,&quot;epmdoc_collapsible&quot;:&quot;false&quot;,&quot;epmdoc_class&quot;:&quot;wt.epm.EPMDocument&quot;,&quot;epmdoc_versionDisplayIdentifier&quot;:&quot;1&quot;,&quot;epmdoc_authoringApplication&quot;:&quot;Creo&quot;,&quot;epmdoc_versionDisplayIdentity&quot;:&quot;Rev 1&quot;,&quot;epmdoc_lengthScale&quot;:&quot;0.001&quot;,&quot;epmdoc_attributeContainer&quot;:&quot;DefaultAttributeContainer[, DefaultAttributeContainerFromServer]&quot;,&quot;epmdoc_oneOffVersionInfo&quot;:&quot;wt.vc.OneOffVersionInfo&quot;,&quot;epmdoc_creatorFullName&quot;:&quot;Dave Design Engineer&quot;,&quot;epmdoc_iterationIdentifier&quot;:&quot;wt.vc.IterationIdentifier&quot;,&quot;epmdoc_latestIteration&quot;:&quot;true&quot;,&quot;epmdoc_containerReference&quot;:&quot;wt.pdmlink.PDMLinkProduct:194004&quot;,&quot;epmdoc_modifierFullName&quot;:&quot;Dave Design Engineer&quot;,&quot;epmdoc_hasResultingChange&quot;:&quot;false&quot;,&quot;epmdoc_modifyTimestamp&quot;:&quot;2018-11-25 17:07:46 UTC&quot;,&quot;epmdoc_containerName&quot;:&quot;Snowmobile&quot;,&quot;epmdoc_hasPendingChange&quot;:&quot;false&quot;,&quot;epmdoc_format&quot;:&quot;wt.content.DataFormat:1407&quot;,&quot;epmdoc_generic&quot;:&quot;false&quot;,&quot;epmdoc_modifierName&quot;:&quot;Dave&quot;,&quot;epmdoc_displayType&quot;:&quot;CAD Part &quot;,&quot;epmdoc_lifeCycleName&quot;:&quot;One Phase Development&quot;,&quot;epmdoc_lifeCycleState&quot;:&quot;Released&quot;,&quot;epmdoc_versionDisplayType&quot;:&quot;Rev&quot;,&quot;epmdoc_state&quot;:&quot;Released&quot;,&quot;epmdoc_identity&quot;:&quot;5258861.PRT - DEFLECTOR-SNOW EXHAUST, 1&quot;,&quot;epmdoc_formatName&quot;:&quot;NONE&quot;,&quot;epmdoc_asStoredConfigReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.epm.workspaces.EPMAsStoredConfig%3A502572&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link\&quot; &gt;null&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_asStoredConfig&quot;:&quot;wt.epm.workspaces.EPMAsStoredConfig&quot;,&quot;epmdoc_type&quot;:&quot;EPM Document&quot;,&quot;epmdoc_branchIdentifier&quot;:&quot;488730&quot;,&quot;epmdoc_referenceControl&quot;:&quot;wt.epm.EPMCADReferenceControl&quot;,&quot;epmdoc_qualifiedidentifier&quot;:&quot;1.1&quot;,&quot;epmdoc_authoringAppVersion&quot;:&quot;PROE L-05 36&quot;,&quot;epmdoc_docType&quot;:&quot;CAD Part&quot;,&quot;epmdoc_typeDefinitionReference&quot;:&quot;wt.type.TypeDefinitionReference&quot;,&quot;epmdoc_ownership&quot;:&quot;(Secured information)&quot;,&quot;epmdoc_hasHangingChange&quot;:&quot;false&quot;,&quot;epmdoc_versionIdentifier&quot;:&quot;wt.vc.VersionIdentifier&quot;,&quot;epmdoc_domainRef&quot;:&quot;wt.admin.AdministrativeDomain:194008&quot;,&quot;epmdoc_ownerApplication&quot;:&quot;Workgroup Manager&quot;,&quot;epmdoc_interopInfo&quot;:&quot;wt.sandbox.InteropInfo&quot;,&quot;epmdoc_verified&quot;:&quot;true&quot;,&quot;epmdoc_number&quot;:&quot;5258861.PRT&quot;,&quot;epmdoc_locked&quot;:&quot;false&quot;,&quot;epmdoc_familyTableStatus&quot;:&quot;0&quot;,&quot;epmdoc_displayIdentity&quot;:&quot;CAD Part  - 5258861.prt, 1.1&quot;,&quot;epmdoc_missingDependents&quot;:&quot;false&quot;,&quot;epmdoc_checkoutInfo&quot;:&quot;Checked in&quot;,&quot;epmdoc_oneOffVersionIdentifier&quot;:&quot;wt.vc.OneOffVersionIdentifier&quot;,&quot;epmdoc_authoringAppVersionReference&quot;:&quot;wt.epm.EPMAuthoringAppVersion:36988&quot;,&quot;epmdoc_organization&quot;:&quot;Organization\n\tname = OEM\n\tinflated = true\n\trepository = Windchill\n\tdn = wt.org.WTOrganization:192050\n\tdescription = OEM organization for Product and Service Advantage Development\n\tinternetDomain = OEM.icenterv01.com\n\tcodingSystem = null\n\tuniqueIdentifier = null\n\tclassification = null\n\tlocation = null\n\twebSite = null\n\tconferencingURL = null\n\tconferencingIdentifier = null\n\trepairNeeded = false\n&quot;,&quot;epmdoc_lifeCycleTemplate&quot;:&quot;One Phase Development&quot;,&quot;epmdoc_master&quot;:&quot;5258861.PRT - DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_derived&quot;:&quot;false&quot;,&quot;epmdoc_lifeCycleBasic&quot;:&quot;true&quot;,&quot;epmdoc_masterReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.epm.EPMDocumentMaster%3A486916&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:CAD_Part__5258861_u46_prt\&quot; &gt;CAD Part  - 5258861.prt&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_topGeneric&quot;:&quot;false&quot;,&quot;epmdoc_displayIdentifier&quot;:&quot;5258861.prt, 1.1&quot;,&quot;epmdoc_iterationInfo&quot;:&quot;1.1&quot;,&quot;epmdoc_rootItemReference&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link\&quot; &gt;null&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_name&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;epmdoc_location&quot;:&quot;&lt;A href=\&quot;https://PP-2202182119C7.portal.ptc.io/Windchill/servlet/WindchillAuthGW/wt.enterprise.URLProcessor/URLTemplateAction?action=ObjProps&amp;amp;oid=OR%3Awt.folder.SubFolder%3A200315&amp;amp;u8=1\&quot;  ID=\&quot;PDML:ObjProps:Link:_u47_Default_u47_Design_u47_CAD_Data\&quot; &gt;/Default/Design/CAD Data&lt;\/A&gt;\r\n&quot;,&quot;epmdoc_persistInfo&quot;:&quot;wt.fc.PersistInfo&quot;,&quot;epmdoc_creatorName&quot;:&quot;Dave&quot;,&quot;epmdoc_templated&quot;:&quot;false&quot;},&quot;__PV_SystemProperties&quot;:{&quot;Display Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Part Path&quot;:&quot;/5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Child Count&quot;:0,&quot;Component Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Model Extents (mm)&quot;:0,&quot;Instance Location&quot;:&quot;&quot;,&quot;Part Name&quot;:&quot;5258861, DEFLECTOR-SNOW EXHAUST, 1.1 (Design)&quot;,&quot;Direct Child Count&quot;:0,&quot;Model Location&quot;:&quot;&quot;,&quot;Part Depth&quot;:0,&quot;OL File Name&quot;:&quot;5258861_prt.ol&quot;,&quot;Component Bounds&quot;:&quot;-0.359289 0.39161634 -1.2266912 -0.22152182 0.4539383 -1.1175103&quot;,&quot;Part ID Path&quot;:&quot;&quot;},&quot;PROE Parameters&quot;:{&quot;PROI_REVISION&quot;:&quot;01&quot;,&quot;PTC_WM_LOCATION&quot;:&quot;/Products/Snow/Design/CAD Data&quot;,&quot;ENGINEER&quot;:&quot;D.MERTENS&quot;,&quot;PTC_WM_MODIFIED_ON&quot;:&quot;25-Nov-18 12:07:46 PM&quot;,&quot;PROI_RELEASE&quot;:&quot;Released&quot;,&quot;CHECKER_DATE&quot;:&quot;04-SEP-13&quot;,&quot;PTC_WM_VERSION&quot;:&quot;1.1&quot;,&quot;DESIGNER&quot;:&quot;D.MERTENS&quot;,&quot;ENGINEER_DATE&quot;:&quot;04-SEP-13&quot;,&quot;PTC_MATERIAL_NAME&quot;:&quot;MM_ALUMINUM&quot;,&quot;PTC_WM_MODIFIED_BY&quot;:&quot;Dave Design Engineer (Dave: OEM)&quot;,&quot;PTC_WM_ITERATION&quot;:&quot;1&quot;,&quot;PART_NAME&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;PDMRL&quot;:&quot;Released&quot;,&quot;DETAILER&quot;:&quot;D.MERTENS&quot;,&quot;PROI_VERSION&quot;:&quot;3&quot;,&quot;MATERIAL_LINE_1&quot;:&quot;5052 H32 ALUMINUM&quot;,&quot;MATERIAL_LINE_2&quot;:&quot;.100 THK&quot;,&quot;DETAILER_DATE&quot;:&quot;3-SEP-13&quot;,&quot;PTC_WM_LIFECYCLE&quot;:&quot;One Phase Development&quot;,&quot;CHECKER&quot;:&quot;J.EATON&quot;,&quot;PRODUCT_ORDER_NUMBER&quot;:&quot;--&quot;,&quot;PROJECT_NUMBER&quot;:&quot;--&quot;,&quot;PTC_MODIFIED&quot;:&quot;false&quot;,&quot;PDMREV&quot;:&quot;01.3&quot;,&quot;PTC_WM_LIFECYCLE_STATE&quot;:&quot;Design&quot;,&quot;DESIGNER_DATE&quot;:&quot;JULY-13&quot;,&quot;PTC_WM_CREATED_ON&quot;:&quot;25-Nov-18 12:03:51 PM&quot;,&quot;PRODUCT_LINE&quot;:&quot;SNOW&quot;,&quot;PROI_MODIFIED&quot;:&quot;0&quot;,&quot;PTC_COMMON_NAME&quot;:&quot;DEFLECTOR-SNOW EXHAUST&quot;,&quot;PTC_WM_CREATED_BY&quot;:&quot;Dave Design Engineer (Dave: OEM)&quot;,&quot;PTC_WM_REVISION&quot;:&quot;1&quot;,&quot;PTC_ORGANIZATION_ID&quot;:&quot;OEM&quot;}}}" baseType="JSON" description="" name="metaDataobject" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVZ"><ResultType aspect.dataShape="WC_Represenations_DS" baseType="IMAGE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.viewmarkup.DerivedImage:127139" baseType="STRING" description="" name="RepresentationId" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVZContent"><ResultType aspect.dataShape="WC_Represenations_DS" baseType="BLOB" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.viewmarkup.DerivedImage:127139" baseType="STRING" description="" name="RepresentationId" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVZfromWVSUtils"><ResultType aspect.dataShape="WC_Represenations_DS" baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="PartVRid" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPVZVWS"><ResultType aspect.dataShape="WC_PVZ_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:211273" baseType="STRING" description="Snowmobile   Snowmobile - 100 SNOW, SNOWMOBILE MASTER, 1.2 (Design)     - VR:wt.part.WTPart:210601" name="PartID" ordinal="1"/><FieldDefinition aspect.defaultValue="false" baseType="BOOLEAN" description="" name="returnMetadataJSON" ordinal="3"/><FieldDefinition aspect.defaultValue="OR:wt.filter.NavigationCriteria:4674286" baseType="STRING" description="" name="SavedFilterCriteriaID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRepresentations"><ResultType aspect.dataShape="WC_Represenations_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:1225229" baseType="STRING" description="" name="PartId" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetSavedFilters"><ResultType aspect.dataShape="WC_Parts_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="FilterName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetSavedFilters2"><ResultType aspect.dataShape="WC_CriteriaFilters_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="MY" baseType="STRING" description="" name="FilterName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetStructure"><ResultType aspect.dataShape="WC_Structure_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:754532" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetStructureByNumber"><ResultType aspect.dataShape="WC_Structure_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="GC000009" baseType="STRING" description="" name="Number" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetStructureLevels"><ResultType aspect.dataShape="WC_Structure_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="level" ordinal="2"/><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:754532" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetStructureSingleLevel"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:754532" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetStructureWithLevels"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:wt.part.WTPart:754532" baseType="STRING" description="" name="PartID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetVariantSavedFilters"><ResultType aspect.dataShape="WC_CriteriaFilters_DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="MY" baseType="STRING" description="" name="FilterName" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="RequestTester"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="VR:wt.part.WTPart:107026" baseType="STRING" description="" name="TestInput" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="Tester"><ResultType baseType="NUMBER" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="GeneratePVZAndGetURL"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GeneratePVZAndGetURL");

let username = Resources["CurrentSessionInfo"].GetCurrentUser();
let startDate = new Date();
var pzvPath;
var id;
var derivedImageID;
var metadataJSON;
var message ="" ;
var details = "PVZ source Requested by "+ username + " using PartId=" + PartId ;
var infoTablePVSystemProperties ;
let boundingBoxX1;
let boundingBoxY1;
let boundingBoxZ1;
let boundingBoxX2;
let boundingBoxY2;
let boundingBoxZ2;

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_PVZ_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_PVZ_DS"
});



try {
    var repInfoTable = me.GetRepresentations({
        PartId: PartId /* STRING {"defaultValue":"VR:wt.part.WTPart:1225229"} */
    });

    if (repInfoTable.length > 0 ) {
        try {
                logger.debug("GeneratePVZAndGetURL GetRepresentations repInfoTable.ID=" + repInfoTable.ID);

                derivedImageID = repInfoTable.ID;
            
//                if (repInfoTable.HasBoundingBox == true  ) { 
//                        const boundsArray = repInfoTable.BoundingBox.array;
//                        logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
//                        boundBoxJSON = repInfoTable.BoundingBox;
//                        boundingBoxX1 = Number( boundsArray[0]);
//                        boundingBoxY1 = Number( boundsArray[1]);
//                        boundingBoxZ1 = Number( boundsArray[2]);
//                        boundingBoxX2 = Number( boundsArray[3]);
//                        boundingBoxY2 = Number( boundsArray[4]);
//                        boundingBoxZ2 = Number( boundsArray[5]);
//                    
//                }

                let cadInfoTable = Things["CAD_Repo"].UploadPVZ({
                    RepID: repInfoTable.ID /* STRING {"defaultValue":"OR:wt.viewmarkup.DerivedImage:696444"} */
                });
                if (cadInfoTable.length > 0 ) {
                    logger.debug("GeneratePVZAndGetURL UploadPVZ cadInfoTable.pvzPath=" + cadInfoTable.pvzPath);
                    logger.debug("GeneratePVZAndGetURL UploadPVZ cadInfoTable.pvzPath=" + cadInfoTable.id);
                    pvzPath = cadInfoTable.pvzPath;
                    id = cadInfoTable.id;
                    try {

                        // result: INFOTABLE dataShape: "WC_METADATA"
                        let metaDataJSON = Things["CAD_Repo"].GetMetaDataByID({
                            pvzId: id /* STRING {"defaultValue":"63377cef-35f0-4a8f-a463-fa66b555ee47"} */
                        });
                        
                        // result: STRING
            			let modelBounds = me.GetPVSystemPropByName({
                            metaDataobject: metaDataJSON.JSON  /* JSON */,
                            PropertyName: "Model Bounds" /* STRING {"defaultValue":"Display Name"} */,
                            nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
                        });
                        let componentBounds = me.GetPVSystemPropByName({
                            metaDataobject: metaDataJSON.JSON  /* JSON */,
                            PropertyName: "Component Bounds" /* STRING {"defaultValue":"Display Name"} */,
                            nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
                        });


                        
                        logger.debug("GetPVZVWS:modelBounds="+modelBounds);
                        if (modelBounds != null && modelBounds != "") {
                            boundsArray = modelBounds.split(" ");
                            logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
                            boundBoxJSON = boundsArray;
                            boundingBoxX1 = Number( boundsArray[0]);
                            boundingBoxY1 = Number( boundsArray[1]);
                            boundingBoxZ1 = Number( boundsArray[2]);
                            boundingBoxX2 = Number( boundsArray[3]);
                            boundingBoxY2 = Number( boundsArray[4]);
                            boundingBoxZ2 = Number( boundsArray[5]);

                        } else if  (componentBounds != null && componentBounds != "") {
                            boundsArray = componentBounds.split(" ");
                            logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
                            boundBoxJSON = boundsArray;
                            boundingBoxX1 = Number( boundsArray[0]);
                            boundingBoxY1 = Number( boundsArray[1]);
                            boundingBoxZ1 = Number( boundsArray[2]);
                            boundingBoxX2 = Number( boundsArray[3]);
                            boundingBoxY2 = Number( boundsArray[4]);
                            boundingBoxZ2 = Number( boundsArray[5]);
                        }

                        try {
                            infoTablePVSystemProperties = me.GetPVSystemProperties({
                                metaDataobject: metaDataJSON.JSON /* JSON */
                            });
                            
                            logger.trace("GeneratePVZAndGetURL >>>>infoTablePVSystemProperties=" + infoTablePVSystemProperties.ToJSON() + "<<<<");                          
                            if (returnMetadataJSON) {
                            	metadataJSON =  metaDataJSON.JSONString;
                        	} 
                            
                        } catch(ex) {
                            logger.debug("GeneratePVZAndGetURL failure during GetPVSystemProperties id=" + id +  " Error=" + ex);
                        }
                        

                    } catch (ex ) {
                        logger.debug("GeneratePVZAndGetURL failed when trying to saveJsonMetaData using RepID=" + RepID);
                        details = details + "Failed when trying to saveJsonMetaData using RepID=" + RepID +  " Error=" + ex;
                        message = "Request failed";
                    }

                } else {
                    logger.debug("GeneratePVZAndGetURL  UploadPVZ return zero rows with RepID=" + RepID);
                    details = details + "Failed UploadPVZ return zero rows with RepID=" + RepID;
                    message = "Request failed";
                }
            
            } catch (ex) {
                logger.debug("GeneratePVZAndGetURL failed when trying to UploadPVZ using RepID=" + RepID);
                details = details + "Failed when trying to UploadPVZ using RepID=" + RepID + " Error=" + ex;
                message = "Request failed";
            }

        } else {
            // 
            logger.debug("GeneratePVZAndGetURL GetRepresentations returned zero row using RepID=" + RepID);
            details = details + "Failed GetRepresentations returned zero row using RepID=" + RepID;
            message = "Request failed";
        }

    	message = "Request successful";
    } catch (ex) {
        logger.debug("GeneratePVZAndGetURL failed when trying to GetRepresentations using PartId=" + PartId);
        details = details + "Failed when trying to GetRepresentations using PartId=" + PartId +  " Error=" + ex;
        message = "Request failed";
    }

let endDate = new Date();

try {
    let dif = startDate.getTime() - endDate.getTime();

    let  Seconds_from_T1_to_T2 = dif / 1000;
    let  Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2).toFixed(1);
    message = message + " Duration:" + Seconds_Between_Dates + " seconds" ;
    
} catch (ex) {
    
    
}

row = new Object();
row.pvzPath = pvzPath;
row.id = id;
row.message = message;
row.details = details;
row.partIDUsed = PartId;
row.metadataJSON = metadataJSON;
row.derivedImageID = derivedImageID;
row.boundingBoxX1 = boundingBoxX1;
row.boundingBoxY1 = boundingBoxY1;
row.boundingBoxZ1 = boundingBoxZ1;
row.boundingBoxX2 = boundingBoxX2;
row.boundingBoxY2 = boundingBoxY2;
row.boundingBoxZ2 = boundingBoxZ2;
row.PVSystemProperties =  infoTablePVSystemProperties;
logger.trace("GeneratePVZAndGetURL infoTablePVSystemProperties >>>>" + infoTablePVSystemProperties.ToJSON());
result.AddRow(row);
logger.debug("GeneratePVZAndGetURL result >>>>" + result.ToJSON());


]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetBom"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetBOM with PartID="+PartID );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_BOM_DS"
});

var nonce = me.GetNonce();

//var navCriteria = '{"NavigationCriteria":{"ApplyToTopLevelObject":false,"UseDefaultForUnresolved":false,"SharedToAll":false,"HideUnresolvedDependents":true,"Centricity":true,"ApplicableType":"wt.part.WTPart","ConfigSpecs":[],"Filters":[]}}';
var navCriteria = '{"NavigationCriteriaId": ""}';


var expand = 'Components($expand=Part($select=Name,Number),PartUse;$levels=max)';

//logger.debug("GetBOM with nonce>>>"+  nonce +"<<<<" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: {"CSRF_NONCE" : nonce} /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/PTC.ProdMgmt.GetBOM?%24expand="+expand , /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */,
    content: navCriteria
};
logger.debug("GetBOM using params>>>"+  JSON.stringify(params)+"<<<<" );
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);
// logger.debug("GetBOM using jsonResult>>>"+  JSON.stringify(jsonResult)+"<<<<" );
if (jsonResult.Components.length > 0 ) {
    for(var i=0; i<jsonResult.Components.length; i++) {
        
        	result.AddRow({   PathId:jsonResult.Components[i].PathId,
                              PartUseId:jsonResult.Components[i].PartUseId,
                              PartName:jsonResult.Components[i].PartName,
                              PartNumber:jsonResult.Components[i].PartNumber,
                              PartUseQuantity:jsonResult.Components[i].PartUse.Quantity,
                              PartUseUnitDisplay:jsonResult.Components[i].PartUse.Unit.Display,
                              PartUseUnitValue:jsonResult.Components[i].PartUse.Unit.Value,
                              PartUseReferenceDesignatorRange:jsonResult.Components[i].PartUse.ReferenceDesignatorRange
                              });
        	
		}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);




]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDocuments"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
logger.debug("entering GetPartDescribedByList with PartID="+PartID );


// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WS_Documents_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WS_Documents_DS"
});



var expand = 'DescribedBy';

let params = {
    headers: { } /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    //https://PP-2112301624B3.portal.ptc.io:443/Windchill/servlet/odata/v5/ProdMgmt/Parts('VR%3Awt.part.WTPart%3A105338')/DescribedBy?%24expand=DescribedBy
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/DescribedBy?%24expand=DescribedBy",
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};

let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);
// result: JSON
//let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);if (jsonResult.value.length > 0 ) {
for(var i=0; i<jsonResult.value.length; i++) {
    result.AddRow({
        ID:jsonResult.value[i].DescribedBy.ID }); 
}

if (result.rows.length > 0 ) { 
    for (var j=0 ; j<result.rows.length; j++ ) {
        var ID = result.rows[j].ID;
        let params = {
            headers: { } /* JSON */,
            ignoreSSLErrors: true /* BOOLEAN */,
            //https://PP-2112301624B3.portal.ptc.io:443/Windchill/servlet/odata/v5/DocMgmt/Documents('OR%3Awt.doc.WTDocument%3A301668')/PrimaryContent
            url: me.WindchillServer +"/servlet/odata/v5/DocMgmt/Documents('" + encodeURIComponent(ID)+ "')/PrimaryContent",
            password: me.WinchillUserPassword /* STRING */,
            domain: undefined /* STRING {"defaultValue":""} */,
            username: me.WindchillUser /* STRING */
        };
       let docResult = Resources["ContentLoaderFunctions"].GetJSON(params);
       logger.debug("GetPartDescribedByList docURL request="+JSON.stringify( docResult));
        try {
            var docURL = docResult.Content.URL ;
            var docLabel = docResult.Content.Label ;
            var typeIcon = docResult.FormatIcon.Path;
            
            logger.debug("GetPartDescribedByList docURL request="+docURL );
            logger.debug("GetPartDescribedByList docLabel request="+docLabel );
            result.rows[j].URL = docURL;

            // generateGUID():STRING
            let docid = generateGUID();
            var RepoName = Things["WCHelper"].RepoName;
            var path ;
            
            if (docLabel.endsWith(".pdf") ) {
                
                path = Things["WCHelper"].PVZFolder+"/"+docid+".pdf";
                
                let params = {
                    headers: undefined /* JSON */,
                    ignoreSSLErrors: true /* BOOLEAN */,
                    url: docURL /* STRING */,
                    password: me.WinchillUserPassword /* STRING */,
                    username: me.WindchillUser /* STRING */
                };

                // result: BLOB
                let docload = Resources["ContentLoaderFunctions"].LoadBinary(params);
                logger.debug("GetPartDescribedByList docload request="+docload);
                Things[RepoName].SaveBinary({
                    path: path /* STRING */,
                    content: docload /* BLOB */
                });

            } else if (docLabel.endsWith(".jpg") ) {
                path = Things["WCHelper"].PVZFolder+"/"+docid+".jpg";      
                let params = {
                    headers: undefined /* JSON */,
                    ignoreSSLErrors: true /* BOOLEAN */,
                    url: docURL /* STRING */,
                    password: me.WinchillUserPassword /* STRING */,
                    username: me.WindchillUser /* STRING */
                };
                // result: IMAGE
                let imageLoad = Resources["ContentLoaderFunctions"].LoadImage(params);
                Things[RepoName].SaveImage({
                    path: path /* STRING */,
                    content: imageLoad /* IMAGE */
                });
                
            } else if (docLabel.endsWith(".png")) {
                path = Things["WCHelper"].PVZFolder+"/"+docid+".png";            
                Things["CAD_Repo"].SaveImage({
                    path: path /* STRING */,
                    content: docURL /* IMAGE */
                });   
                
            } else if (docLabel.endsWith(".docx")) {  
                path =  docURL;   
             } else {
                path =  docURL;
             }
            
            result.rows[j].URL = "/Thingworx/FileRepositories/CAD_Repo/"+path ; 
            result.rows[j].Label = docLabel;
            result.rows[j].TypeIcon =  typeIcon ;  
            
            }catch (ex) {
              logger.error("GetPartDescribedByList Document rquest error="+ex );
        }
    }

    
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDocumentsCopy"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
logger.debug("entering GetPartDescribedByList with PartID="+PartID );


// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WS_Documents_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WS_Documents_DS"
});



var expand = 'DescribedBy';

let params = {
    headers: { } /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    //https://PP-2112301624B3.portal.ptc.io:443/Windchill/servlet/odata/v5/ProdMgmt/Parts('VR%3Awt.part.WTPart%3A105338')/DescribedBy?%24expand=DescribedBy
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/DescribedBy?%24expand=DescribedBy",
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};
let PathX ="NOT-set";
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);
// result: JSON
//let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);if (jsonResult.value.length > 0 ) {
for(var i=0; i<jsonResult.value.length; i++) {
    result.AddRow({
        ID:jsonResult.value[i].DescribedBy.ID }); 
}

if (result.rows.length > 0 ) { 
    for (var j=0 ; j<result.rows.length; j++ ) {
        var ID = result.rows[j].ID;
        let params = {
            headers: { } /* JSON */,
            ignoreSSLErrors: true /* BOOLEAN */,
            //https://PP-2112301624B3.portal.ptc.io:443/Windchill/servlet/odata/v5/DocMgmt/Documents('OR%3Awt.doc.WTDocument%3A301668')/PrimaryContent
            url: me.WindchillServer +"/servlet/odata/v5/DocMgmt/Documents('" + encodeURIComponent(ID)+ "')/PrimaryContent",
            password: me.WinchillUserPassword /* STRING */,
            domain: undefined /* STRING {"defaultValue":""} */,
            username: me.WindchillUser /* STRING */
        };
       let docResult = Resources["ContentLoaderFunctions"].GetJSON(params);
       logger.debug("GetPartDescribedByList docURL request="+JSON.stringify( docResult));
        try {
            var docURL = docResult.Content.URL ;
            var docLabel = docResult.Content.Label ;
            var typeIcon = docResult.FormatIcon.Path;
            
            logger.debug("GetPartDescribedByList docURL request="+docURL );
            logger.debug("GetPartDescribedByList docLabel request="+docLabel );
            result.rows[j].URL = docURL;

            // generateGUID():STRING
            let docid = generateGUID();
            var RepoName = Things["WCHelper"].RepoName;
            var path ;
            
            if (docLabel.endsWith(".pdf") ) {
                
                path = Things["WCHelper"].PVZFolder+"/"+docid+".pdf";
                
                let params = {
                    headers: undefined /* JSON */,
                    ignoreSSLErrors: true /* BOOLEAN */,
                    url: docURL /* STRING */,
                    password: me.WinchillUserPassword /* STRING */,
                    username: me.WindchillUser /* STRING */
                };
				
                // result: BLOB
                resultdocload = Resources["ContentLoaderFunctions"].LoadBinary(params);
                logger.debug("GetPartDescribedByList docload request="+resultdocload);
                PathX = path;
                Things[RepoName].SaveBinary({
                    path: path /* STRING */,
                    content: resultdocload /* BLOB */
                });
PathX = path;


            } 
            
            }catch (ex) {
              logger.error("GetPartDescribedByList Document rquest error="+ex );
        }
    }

    
}

 result = PathX;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetExtendedMetadata"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetExtendedMetadata");

try {
   logger.debug("GetExtendedMetadata fileGUID="+ fileGUID + " partIDUsed="+partIDUsed);
} catch (ex) {
   logger.debug("GetExtendedMetadata error getting passed param " + ex);
}

let username = Resources["CurrentSessionInfo"].GetCurrentUser();
let startDate = new Date();
var metadataJSON;
var message ="" ;
var details = "PVZ source Requested by "+ username + " using PartId=" + partIDUsed ;
var infoTablePVSystemProperties ;
let boundingBoxX1;
let boundingBoxY1;
let boundingBoxZ1;
let boundingBoxX2;
let boundingBoxY2;
let boundingBoxZ2;

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_PVZ_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_PVZ_DS"
});

    try {

        // result: INFOTABLE dataShape: "WC_METADATA"
        let metaDataJSON = Things["CAD_Repo"].GetMetaDataByID({
            pvzId: fileGUID /* STRING {"defaultValue":"63377cef-35f0-4a8f-a463-fa66b555ee47"} */
        });

        // result: STRING
        let modelBounds = me.GetPVSystemPropByName({
            metaDataobject: metaDataJSON.JSON  /* JSON */,
            PropertyName: "Model Bounds" /* STRING {"defaultValue":"Display Name"} */,
            nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
        });
        let componentBounds = me.GetPVSystemPropByName({
            metaDataobject: metaDataJSON.JSON  /* JSON */,
            PropertyName: "Component Bounds" /* STRING {"defaultValue":"Display Name"} */,
            nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
        });



        logger.debug("GetExtendedMetadata:modelBounds="+modelBounds);
        if (modelBounds != null && modelBounds != "") {
            boundsArray = modelBounds.split(" ");
            logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
            boundBoxJSON = boundsArray;
            boundingBoxX1 = Number( boundsArray[0]);
            boundingBoxY1 = Number( boundsArray[1]);
            boundingBoxZ1 = Number( boundsArray[2]);
            boundingBoxX2 = Number( boundsArray[3]);
            boundingBoxY2 = Number( boundsArray[4]);
            boundingBoxZ2 = Number( boundsArray[5]);

        } else if  (componentBounds != null && componentBounds != "") {
            boundsArray = componentBounds.split(" ");
            logger.debug("GetExtendedMetadata boundsArray=" + boundsArray); 
            boundBoxJSON = boundsArray;
            boundingBoxX1 = Number( boundsArray[0]);
            boundingBoxY1 = Number( boundsArray[1]);
            boundingBoxZ1 = Number( boundsArray[2]);
            boundingBoxX2 = Number( boundsArray[3]);
            boundingBoxY2 = Number( boundsArray[4]);
            boundingBoxZ2 = Number( boundsArray[5]);
        }

        try {
            infoTablePVSystemProperties = me.GetPVSystemProperties({
                metaDataobject: metaDataJSON.JSON /* JSON */
            });

            logger.trace("GetExtendedMetadata >>>>infoTablePVSystemProperties=" + infoTablePVSystemProperties.ToJSON() + "<<<<");                          
            if (returnMetadataJSON) {
                metadataJSON =  metaDataJSON.JSONString;
            } 

        } catch(ex) {
            logger.debug("GetExtendedMetadata failure during GetPVSystemProperties id=" + id +  " Error=" + ex);
        }


    } catch (ex ) {
        logger.debug("GetExtendedMetadata failed when trying to saveJsonMetaData using RepID=" + RepID);
        details = details + "Failed when trying to saveJsonMetaData using RepID=" + RepID +  " Error=" + ex;
        message = "Request failed";
    }


let endDate = new Date();

try {
    let dif = startDate.getTime() - endDate.getTime();

    let  Seconds_from_T1_to_T2 = dif / 1000;
    let  Seconds_Between_Dates = Math.abs(Seconds_from_T1_to_T2).toFixed(1);
    message = message + " Duration:" + Seconds_Between_Dates + " seconds" ;
    
} catch (ex) {
    
    
}

row = new Object();
row.id = fileGUID;
row.message = message;
row.details = details;
row.partIDUsed = partIDUsed;
row.metadataJSON = metadataJSON;
row.boundingBoxX1 = boundingBoxX1;
row.boundingBoxY1 = boundingBoxY1;
row.boundingBoxZ1 = boundingBoxZ1;
row.boundingBoxX2 = boundingBoxX2;
row.boundingBoxY2 = boundingBoxY2;
row.boundingBoxZ2 = boundingBoxZ2;
row.PVSystemProperties =  infoTablePVSystemProperties;
logger.trace("GetExtendedMetadata infoTablePVSystemProperties >>>>" + infoTablePVSystemProperties.ToJSON());
result.AddRow(row);
logger.debug("GetExtendedMetadata result >>>>" + result.ToJSON());


]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetNonce"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetNonce" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: me.WindchillServer + "/servlet/odata/v3/PTC/GetCSRFToken()", /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let json = Resources["ContentLoaderFunctions"].GetJSON(params);

logger.debug("GetNonce nonce=" + json.NonceValue  );
result = json.NonceValue;

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetOptions"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetOptins with  ID="+ ID);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});
let params = {
	headers: { } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
    url: me.WindchillServer+"/servlet/odata/v3/ProdPlatformMgmt/OptionSets('"+ ID+"')/Options?%24count=false", /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {

        result.AddRow({VersionID:jsonResult.value[i].VersionID,
                              Name:jsonResult.value[i].Name,
                              ID:jsonResult.value[i].ID,
                              });
        }
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetOptionSetsByContext"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPartsByProduct with  ProductName="+ Context);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});
let params = {
	headers: { } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
    url: me.WindchillServer +"/servlet/odata/v3/ProdPlatformMgmt/OptionSets?%24filter=Context%2FName%20eq%20'Snowmobile'%20%20and%20State%2FValue%20eq%20'RELEASED'%20&%24count=false",
	//url: "https://PP-22010522066K.portal.ptc.io:443/Windchill/servlet/odata/v3/ProdPlatformMgmt/OptionSets?%24filter=Context%2FName%20eq%20'+Context+'%20%20and%20State%2FValue%20eq%20'RELEASED'%20&%24count=false", /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {

        result.AddRow({VersionID:jsonResult.value[i].VersionID,
                              Name:jsonResult.value[i].Name,
                              ID:jsonResult.value[i].ID,
                              });
        }
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartByName"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetParts with Partname="+PartName );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    

	url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Name%20eq%20'" + encodeURIComponent(PartName)+ "'&%24count=false", /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                              EndItem:jsonResult.value[i].EndItem,
                              CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                              Name:jsonResult.value[i].Name,
                              Number:jsonResult.value[i].Number,
                              Identity:jsonResult.value[i].Identity,
                              Revision:jsonResult.value[i].Revision,
                              ID:jsonResult.value[i].ID,
                              TypeIcon:jsonResult.value[i].TypeIcon.Path
                              });
        	
		}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);




]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetParts with Number="+Number );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    

	url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Number%20eq%20'" + encodeURIComponent(Number)+ "'&%24count=false", /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                              EndItem:jsonResult.value[i].EndItem,
                              CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                              Name:jsonResult.value[i].Name,
                              Number:jsonResult.value[i].Number,
                              Identity:jsonResult.value[i].Identity,
                              Revision:jsonResult.value[i].Revision,
                              ID:jsonResult.value[i].ID,
                              TypeIcon:jsonResult.value[i].TypeIcon.Path
                              });
        	
		}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);




]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParts"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetParts with Partname="+PartName );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});



let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url:  me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(PartName)+ "'&%24count=false", /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        result.AddRow({VersionID:jsonResult.value[i].VersionID,
                              EndItem:jsonResult.value[i].EndItem,
                              CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                              Name:jsonResult.value[i].Name,
                              Number:jsonResult.value[i].Number,
                              Identity:jsonResult.value[i].Identity,
                              Revision:jsonResult.value[i].Revision,
                              ID:jsonResult.value[i].ID,
                              TypeIcon:jsonResult.value[i].TypeIcon.Path
                              });
        }
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);



]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsByContextAndNameFilter"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPartsByContextAndNameFilter with  ProductContext="+ ProductContext + " NameFilter" + NameFilter);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});


if (NameFilter != null && NameFilter != "") {
   url =  me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'%20and%20contains(Name%2C'"+NameFilter+"')&%24count=false";
} else { 
   url = me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'&%24top=100&%24count=true";
}

let params = {
	headers: { "Prefer" : "odata.maxpagesize=200"  } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
      // if (jsonResult.value[i].TypeIcon.Path.endsWith("part.gif")) {
        var src ="";
        var srcpressed= "";
        if (jsonResult.value[i].TypeIcon.Path.includes("mySnoMobile_16")) {
            
                        src = "/Thingworx/MediaEntities/WC_Snowmobile";
                        srcpressed = "/Thingworx/MediaEntities/WC_Snowmobile";
            } else if (jsonResult.value[i].TypeIcon.Path.includes("part")) {
                         src = "/Thingworx/MediaEntities/WC_Part";
                         srcpressed = "/Thingworx/MediaEntities/WC_Part";  
                       
            } else if (jsonResult.value[i].TypeIcon.Path.includes("variant")) {
                         src = "/Thingworx/MediaEntities/WC_vart";
                         srcpressed = "/Thingworx/MediaEntities/WC_variant";  
            }
            
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                  EndItem:jsonResult.value[i].EndItem,
                  CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                  Name:jsonResult.value[i].Name,
                  Number:jsonResult.value[i].Number,
                  Identity:jsonResult.value[i].Identity,
                  Revision:jsonResult.value[i].Revision,
                  ID:jsonResult.value[i].ID,
                  View:jsonResult.value[i].View,
                  TypeIcon:jsonResult.value[i].TypeIcon.Path,
                  src:src,
                  srcpressed:srcpressed
                  });
        	//}
    	}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsByContextAndNameFilterJSON"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPartsByContextAndNameFilterJSON with  ProductContext="+ ProductContext + " NameFilter=" + NameFilter);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});


if (NameFilter != null && NameFilter != "") {
   url =  me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'%20and%20contains(Name%2C'"+NameFilter+"')&%24count=false";
} else { 
   url = me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'&%24top=100&%24count=true";
}

logger.debug("GetPartsByContextAndNameFilterJSON: url "+ url);

let params = {
	headers: { "Prefer" : "odata.maxpagesize=200"  } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
      // if (jsonResult.value[i].TypeIcon.Path.endsWith("part.gif")) {
        var src ="";
        var srcpressed= "";
        if (jsonResult.value[i].TypeIcon.Path.includes("mySnoMobile_16")) {
            
                        src = "/Thingworx/MediaEntities/WC_Snowmobile";
                        srcpressed = "/Thingworx/MediaEntities/WC_Snowmobile";
            } else if (jsonResult.value[i].TypeIcon.Path.includes("part")) {
                         src = "/Thingworx/MediaEntities/WC_Part";
                         srcpressed = "/Thingworx/MediaEntities/WC_Part";  
                       
            } else if (jsonResult.value[i].TypeIcon.Path.includes("variant")) {
                         src = "/Thingworx/MediaEntities/WC_vart";
                         srcpressed = "/Thingworx/MediaEntities/WC_variant";  
            }
            
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                  EndItem:jsonResult.value[i].EndItem,
                  CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                  Name:jsonResult.value[i].Name,
                  Number:jsonResult.value[i].Number,
                  Identity:jsonResult.value[i].Identity,
                  Revision:jsonResult.value[i].Revision,
                  ID:jsonResult.value[i].ID,
                  View:jsonResult.value[i].View,
                  TypeIcon:jsonResult.value[i].TypeIcon.Path,
                  src:src,
                  srcpressed:srcpressed
                  });
        	//}
    	}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);
result = result.ToJSON();]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsByContextAndOptionalName"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPartsByProduct with  ProductContext="+ ProductContext + " NameFilter" + NameFilter);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});

if (NameFilter != null && NameFilter != "") {
   url =  me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'%20and%20contains(Name%2C'"+NameFilter+"')&%24count=false";
} else { 
   url = me.WindchillServer +"/Windchill/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductContext)+ "'&%24top=100&%24count=true";
}

let params = {
	headers: { "Prefer" : "odata.maxpagesize=10"  } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
    

	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
      // if (jsonResult.value[i].TypeIcon.Path.endsWith("part.gif")) {
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                  EndItem:jsonResult.value[i].EndItem,
                  CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                  Name:jsonResult.value[i].Name,
                  Number:jsonResult.value[i].Number,
                  Identity:jsonResult.value[i].Identity,
                  Revision:jsonResult.value[i].Revision,
                  ID:jsonResult.value[i].ID,
                  TypeIcon:jsonResult.value[i].TypeIcon.Path
                  });
        	//}
    	}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsByProduct"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPartsByProduct with  ProductName="+ ProductName);
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});


let params = {
	headers: { "Prefer" : "odata.maxpagesize=200"  } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts?%24filter=Context%2FName%20eq%20'" + encodeURIComponent(ProductName)+ "'&%24top=100&%24count=true", /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
      // if (jsonResult.value[i].TypeIcon.Path.endsWith("part.gif")) {
        	result.AddRow({VersionID:jsonResult.value[i].VersionID,
                  EndItem:jsonResult.value[i].EndItem,
                  CheckOutStatus:jsonResult.value[i].CheckOutStatus,
                  Name:jsonResult.value[i].Name,
                  Number:jsonResult.value[i].Number,
                  Identity:jsonResult.value[i].Identity,
                  Revision:jsonResult.value[i].Revision,
                  ID:jsonResult.value[i].ID,
                  TypeIcon:jsonResult.value[i].TypeIcon.Path
                  });
        	//}
    	}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVSystemPropByName"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPVSystemPropByName PropertyName=" + PropertyName +  " nodeName=" + nodeName );

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Namevalue_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_NameValuePairs_DS"
});

result = "";
let nodeProperties = metaDataobject["/"][nodeName];

if (nodeProperties != null && nodeProperties != "") {
let jsonData =JSON.parse(nodeProperties);
    Object.keys(jsonData).forEach(function(key) {
        var value = jsonData[key];
        if (key === PropertyName) {
            result = value;
            logger.debug("Entering GetPVSystemPropByName PropertyName=" + PropertyName +  " Value=" + result );
        }
    });
}


]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVSystemProperties"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetPVSystemProperties");



// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Namevalue_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_NameValuePairs_DS"
});



let pvSystemProperties = metaDataobject["/"]["__PV_SystemProperties"];

let jsonData =JSON.parse(pvSystemProperties);

Object.keys(jsonData).forEach(function(key) {
    var value = jsonData[key];
   // logger.debug("key="+key+" "+"value="+ value);
    // ...
});

result.AddRow({Name:"ChildCount", Value:pvSystemProperties["Child Count"]});
result.AddRow({Name:"ComponentName", Value:pvSystemProperties["Component Name"]});
result.AddRow({Name:"DirectChild", Value:pvSystemProperties["Direct Child"]});
result.AddRow({Name:"DisplayName", Value:pvSystemProperties["Display Name"]});
result.AddRow({Name:"InstanceLocation", Value:pvSystemProperties["Instance Location"]});
result.AddRow({Name:"ModelBounds", Value:pvSystemProperties["Model Bounds"]});
result.AddRow({Name:"ComponentBounds", Value:pvSystemProperties["Component Bounds"]});
result.AddRow({Name:"OLFileName", Value:pvSystemProperties["OL File Name"]});
result.AddRow({Name:"PartDepth", Value:pvSystemProperties["Part Depth"]});
result.AddRow({Name:"PartIDPath", Value:pvSystemProperties["Part ID Path"]});
result.AddRow({Name:"PartName", Value:pvSystemProperties["Part Name"]});
result.AddRow({Name:"PartPath", Value:pvSystemProperties["Part Path"]});


]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVZ"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Executing GetPVZ with ID = "+ RepresentationId);

url = me.WindchillServer +"/servlet/odata/v2/Visualization/Representations('"+RepresentationId+"')/PTC.Visualization.GetPVZ(IncludeAnnotations=false)";
logger.debug("GetPVZ request URL = "+ url);

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: { 'Accept' : 'text/html' } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: url ,
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};

// result: BLOB
//let pvzContent = Resources["ContentLoaderFunctions"].LoadBinary(params);

//// result: STRING
//let path  = Things["CAD_Repo"].UploadPVZ({
//	pvzContent: pvzContent /* BLOB */
//});
//

//
// generateGUID():STRING
let id = generateGUID();
let pvzpath = id + ".pvz";

logger.debug("UploadPVZ with upload path = "+ "/PVZFolder/"+  pvzpath);

Things["CAD_Repo"].SaveBinary({
	path: "/PVZFolder/"+pvzpath /* STRING */,
	content: Resources["ContentLoaderFunctions"].LoadBinary(params) /* BLOB */
});


//me.SaveBinary({
//	path:  "/PVZFolder/"+pvzpath /* STRING */,
//	content: pvzContent /* BLOB */
//});
//
logger.debug("UploadPVZ with final  = "+ "/Thingworx/FileRepositories/CAD_Repo/" + pvzpath); 
result = "/Thingworx/FileRepositories/CAD_Repo/" + pvzpath;




result = path ;

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVZContent"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Executing GetPVZ with ID = "+ RepresentationId);

url = me.WindchillServer +"/servlet/odata/v2/Visualization/Representations('"+RepresentationId+"')/PTC.Visualization.GetPVZ(IncludeAnnotations=false)";
logger.debug("GetPVZ request URL = "+ url);

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: { 'Accept' : 'text/html' } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: url ,
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};

// result: BLOB
let result = Resources["ContentLoaderFunctions"].LoadBinary(params);

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVZfromWVSUtils"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Executing GetPVZfromWVSUtils with ID = "+ PartVRid);
url = me.WindchillServer + "servlet/WindchillAuthGW/com.ptc.windchill.enterprise.wvs.saveWVSObject.utils.SaveWVSObjectHelper/saveWVSObject/structure.pvz?oid=" + PartVRid + "&fileType=zip&annotations=true";
logger.debug("GetPVZfromWVSUtils request URL = "+ url);

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: { } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: url ,
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */
};




let pvzContent = Resources["ContentLoaderFunctions"].LoadBinary(params);

//let result = pvzContent;
//
//
// generateGUID():STRING
let id = generateGUID();
let pvzpath = id + ".pvz";

logger.debug("GetPVZfromWVSUtils with upload path = "+ "/PVZFolder/"+  pvzpath);

Things["CAD_Repo"].SaveBinary({
    path: "/PVZFolder/"+pvzpath /* STRING */,
	content: pvzContent /* BLOB */
});

logger.debug("UploadPVZ with final  = "+ "/Thingworx/FileRepositories/CAD_Repo/" + pvzpath); 
result = "/Thingworx/FileRepositories/CAD_Repo/" + pvzpath;


]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPVZVWS"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Executing GetPVZVWS with ID = "+ PartID + " SavedFilterCriteriaID" +SavedFilterCriteriaID);


let username = Resources["CurrentSessionInfo"].GetCurrentUser();
let startDate = new Date();

let id = generateGUID();
let pvzpath = id + ".pvz";
var derivedImageID;
var metadataJSON;
var message ="";
var details = "PVZ source Requested by "+ username + " using PartID=" + PartID ;
let boundBoxJSON;
let boundingBoxX1;
let boundingBoxY1;
let boundingBoxZ1;
let boundingBoxX2;
let boundingBoxY2;
let boundingBoxZ2;

let infoTablePVSystemProperties;

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_PVZ_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_PVZ_DS"
});


try { 
// structure.pvz?oid={{$a8.PartId}}&filter={{$a8.NavCriteriaId}}&fileType=zip&annotations=true
// OR:wt.filter.NavigationCriteria:4668036
// structure.pvz?oid={{$a8.PartId}}&filter=VR:com.ptc.wpcfg.doc.VariantSpec:4637145&fileType=zip&annotations=true
//url = Things["WCHelper"].WindchillServer + "/servlet/WindchillAuthGW/com.ptc.windchill.enterprise.wvs.saveWVSObject.utils.SaveWVSObjectHelper/saveWVSObject/structure.pvz?oid=" + PartID + "&fileType=zip&annotations=true";
    url = Things["WCHelper"].WindchillServer + "/servlet/WindchillAuthGW/com.ptc.windchill.enterprise.wvs.saveWVSObject.utils.SaveWVSObjectHelper/saveWVSObject/structure.pvz?oid=" + PartID + "&filter="+SavedFilterCriteriaID+"&fileType=zip&annotations=true";

    logger.debug("Executing GetPVZVWS url = "+ url);

    let params = {
    headers: undefined /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    url: url /* STRING */,
    password: me.WinchillUserPassword /* STRING */,
    username: me.WindchillUser /* STRING */
    };

    let fullpath =  "/"+ me.PVZFolder+"/" +pvzpath ;
    Things["CAD_Repo"].SaveBinary({
    path:  fullpath /* STRING */,
    content: Resources["ContentLoaderFunctions"].LoadBinary(params) /* BLOB */

    });


    try {
    
        Things["CAD_Repo"].saveJsonMetaData({
            pvzId: id /* STRING {"defaultValue":"e67ceedd-f20a-4ad9-8e38-b2a022085bf0"} */
        });
        
        try {
            // result: INFOTABLE dataShape: "WC_METADATA"
            let infoTablemetaDataJSON = Things["CAD_Repo"].GetMetaDataByID({
                pvzId: id /* STRING {"defaultValue":"63377cef-35f0-4a8f-a463-fa66b555ee47"} */
            });

            infoTablePVSystemProperties = me.GetPVSystemProperties({
                metaDataobject: infoTablemetaDataJSON.JSON /* JSON */
            });
            logger.trace("GetPVZVWS >>>>infoTablePVSystemProperties=" + infoTablePVSystemProperties.ToJSON() + "<<<<"); 
            logger.trace("GetPVZVWS infoTablePVSystemProperties=" + infoTablePVSystemProperties + "<<<<"); 
            logger.debug("GetPVZVWS __PV_SystemProperties=" + infoTablemetaDataJSON.JSON ["/"]["__PV_SystemProperties"] + "<<<<");
            
            // result: STRING
            let modelBounds = me.GetPVSystemPropByName({
                metaDataobject: infoTablemetaDataJSON.JSON  /* JSON */,
                PropertyName: "Model Bounds" /* STRING {"defaultValue":"Display Name"} */,
                nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
            });
            
            let componentBounds = me.GetPVSystemPropByName({
                metaDataobject: infoTablemetaDataJSON.JSON  /* JSON */,
                PropertyName: "Component Bounds" /* STRING {"defaultValue":"Display Name"} */,
                nodeName: "__PV_SystemProperties" /* STRING {"defaultValue":"__PV_SystemProperties"} */
            });
            logger.debug("GetPVZVWS:modelBounds="+modelBounds);
            if (modelBounds != null && modelBounds != "") {
                boundsArray = modelBounds.split(" ");
                logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
                boundBoxJSON = boundsArray;
                boundingBoxX1 = Number( boundsArray[0]);
                boundingBoxY1 = Number( boundsArray[1]);
                boundingBoxZ1 = Number( boundsArray[2]);
                boundingBoxX2 = Number( boundsArray[3]);
                boundingBoxY2 = Number( boundsArray[4]);
                boundingBoxZ2 = Number( boundsArray[5]);

            } else if  (componentBounds != null && componentBounds != "") {
                boundsArray = componentBounds.split(" ");
                logger.debug("GetPVZVWS boundsArray=" + boundsArray); 
                boundBoxJSON = boundsArray;
                boundingBoxX1 = Number( boundsArray[0]);
                boundingBoxY1 = Number( boundsArray[1]);
                boundingBoxZ1 = Number( boundsArray[2]);
                boundingBoxX2 = Number( boundsArray[3]);
                boundingBoxY2 = Number( boundsArray[4]);
                boundingBoxZ2 = Number( boundsArray[5]);
            }
         
            if (returnMetadataJSON) {
                metadataJSON =  metaDataJSON.JSONString;
            } 

        } catch(ex) {
            logger.debug("Failure during GetPVZVWS:GetPVSystemProperties id=" + id + 'Error:'+ex);
        }
        
        
    
    } catch (ex) {
        logger.error("GetPVZVWS and saveJsonMetaData failed! Error="+  ex);

    }
    
    


    pvzPath = "/Thingworx/FileRepositories/"+ me.RepoName+fullpath ;
    message = message + " Request Successful";

} catch (ex) {
    logger.debug("GetPVZVWS Failed whilst executing enterprise.wvs.saveWVSObject.utils.SaveWVSObjectHelper/saveWVSObject/structure.pvz?oid=" + PartID+ " Error " +ex);
    details = details + "Failed executing  enterprise.wvs.saveWVSObject.utils.SaveWVSObjectHelper/saveWVSObject/structure.pvz?oid=" + PartID ;
    message = message + "Request Failed";
    
}




//try {
//    var repInfoTable = me.GetRepresentations({
//        PartId: PartID /* STRING {"defaultValue":"VR:wt.part.WTPart:1225229"} */
//    });
//    
//    message = message + " Request GetRepresentations was successful";
//    
//    if (repInfoTable.length > 0) {
//       logger.debug("GetPVZVWS GetRepresentations derivedImageID =" + repInfoTable.ID);
//
//        derivedImageID = repInfoTable.ID;
//        if (repInfoTable.HasBoundingBox == true  ) { 
//            boundBoxJSON = repInfoTable.BoundingBox;
//        }
//        
//        try {
//                        
//            let metadataString = Things["CAD_Repo"].saveJsonMetaData({
//                pvzId: id  /* STRING {"defaultValue":"e67ceedd-f20a-4ad9-8e38-b2a022085bf0"} */
//            });
//
//            if (returnMetadataJSON) {
//              metadataJSON = metadataString;
//            } 
//            
//        } catch (ex ) {
//            logger.debug("GeneratePVZAndGetURL failed when trying to saveJsonMetaData using RepID=" + RepID);
//            details = details + "Failed when trying to saveJsonMetaData using RepID=" + RepID;
//            message = "Request failed";
//        }
//
//    }
//    
//} catch (ex) {
//    logger.debug("GetPVZVWS Failed whilst executing GetRepresentations with  PartID=" + PartID + " Error " +ex);
//    details = details + "Failed GetRepresentations return zero rows with PartID=" + PartID;
//    message = message + "Request GetRepresentations failed";
//    
//}

row = new Object();
row.pvzPath = pvzPath;
row.id = id;
row.message = message;
row.details = details;
row.partIDUsed = PartID;
row.metadataJSON = metadataJSON;
row.derivedImageID = derivedImageID;
row.boundingBoxX1 = boundingBoxX1;
row.boundingBoxY1 = boundingBoxY1;
row.boundingBoxZ1 = boundingBoxZ1;
row.boundingBoxX2 = boundingBoxX2;
row.boundingBoxY2 = boundingBoxY2;
row.boundingBoxZ2 = boundingBoxZ2;
row.PVSystemProperties =  infoTablePVSystemProperties;
result.AddRow(row);
logger.debug("GetPVZVWS result >>>>" + result.ToJSON());
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRepresentations"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetRepresentations");
let hasBoundingBox = false;

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)

let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Represenations_DS"
});

let params = {
	headers: undefined /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('"+PartId+"')/Representations?%24count=false",/* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        if(jsonResult.value[i].DefaultRepresentation == true){
            
            var boundBoxJSON = JSON.stringify(jsonResult.value[i].BoundingBox);
            hasBoundingBox = true;
            result.AddRow({VersionID:jsonResult.value[i].VersionID,
                                  ID:jsonResult.value[i].ID,
                                  TwoDThumbnailURL:jsonResult.value[i].TwoDThumbnailURL.URL,
                                  BoundingBox:jsonResult.value[i].BoundingBox,
                                  HasBoundingBox:hasBoundingBox
                                  });
           }
    }
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetSavedFilters"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetSavedFilters with  FilterName="+ FilterName );

let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Parts_DS"
});

//https://PP-22010522066K.portal.ptc.io:443/Windchill/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'MYFILTER')&%24count=false
url = me.WindchillServer +"/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'"+FilterName+"')&%24count=false";


let params = {
	headers: {   } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

//let result = JSON.stringify(Jonresult);
if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        	result.AddRow({
                  Name:jsonResult.value[i].Name,
                  ID:jsonResult.value[i].ID
                  });

    	}
}


//let sort = {
//    name: "Name",
//    ascending: true
//};
//result.Sort(sort);
//
//params = {
//	table: result /* INFOTABLE */
//};
//
//// result: JSON
//result =   Resources["InfoTableFunctions"].ToJSON(params);

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetSavedFilters2"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetSavedFilters with  FilterName="+ FilterName );

let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_CriteriaFilters_DS"
});

//https://PP-22010522066K.portal.ptc.io:443/Windchill/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'MYFILTER')&%24count=false
url = me.WindchillServer +"/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'"+FilterName+"')&%24count=false";


let params = {
	headers: {   } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

//let result = JSON.stringify(Jonresult);
if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        	result.AddRow({
                  Name:jsonResult.value[i].Name,
                  text:jsonResult.value[i].Name,
                  value:   (jsonResult.value[i].ID), //.replace(/:/g, "#"),
                  src: "/Thingworx/MediaEntities/WC_Filter",  // MediaEntities["WC_Filter"].GetAvatarURL(),
                  srcpressed: "/Thingworx/MediaEntities/WC_FilterSelected", // MediaEntities["WC_Filter"].GetAvatarURL()
                  pressed: false,
                  srcnotpressed: "/Thingworx/MediaEntities/WC_Filter" // MediaEntities["WC_Filter"].GetAvatarURL()
                  });

    	}
}

//let sort = {
//    name: "Name",
//    ascending: true
//};
//result.Sort(sort);
//
//params = {
//	table: result /* INFOTABLE */
//};
//



]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStructure"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetStructure with PartID="+PartID );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

var nonce = me.GetNonce();

var navCriteria = '{"NavigationCriteria":{"ApplyToTopLevelObject":true,"UseDefaultForUnresolved":true,"SharedToAll":true,"HideUnresolvedDependents":true,"Centricity":true,"ApplicableType":"wt.part.WTPart","ConfigSpecs":[],"Filters":[]}}';
var expand = 'Components($expand=Part($select=Name,Number),PartUse,Occurrence;$levels=2)';

logger.debug("GetStructure with nonce>>>"+  nonce +"<<<<" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: {"CSRF_NONCE" : nonce} /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/PTC.ProdMgmt.GetPartStructure?%24expand="+expand , /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */,
    content: navCriteria
};
logger.debug("GetStructure using params>>>"+  JSON.stringify(params)+"<<<<" );
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);
// logger.debug("GetStructure using jsonResult>>>"+  JSON.stringify(jsonResult)+"<<<<" );
if (jsonResult.Components.length > 0 ) {
    for(var i=0; i<jsonResult.Components.length; i++) {
        
        	result.AddRow({   PathId:jsonResult.Components[i].PathId,
                              PartUseQuantity:jsonResult.Components[i].PartUse.Quantity,
                              PartUseID:jsonResult.Components[i].PartUse.ID,
                              PartUseUnitDisplay:jsonResult.Components[i].PartUse.Unit.Display,
                              PartUseUnitValue:jsonResult.Components[i].PartUse.Unit.Value,
                              PartUseReferenceDesignatorRange:jsonResult.Components[i].PartUse.ReferenceDesignatorRange,
                              PartUseLineNumber:jsonResult.Components[i].PartUse.LineNumber,
                              PartName:jsonResult.Components[i].PartName,
                              PartNumber:jsonResult.Components[i].PartNumber,
                              PVParentTreeId:jsonResult.Components[i].PVParentTreeId,
                              PVTreeId:jsonResult.Components[i].PVTreeId,
                              PartId:jsonResult.Components[i].PartId
                              });
        	
		}
}


let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);




]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStructureByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetStructureByNumber with Number="+Number );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});


// result: INFOTABLE dataShape: "WC_Parts_DS"
let partInfoTable = me.GetPartByNumber({
	Number: Number /* STRING {"defaultValue":"GC000009"} */
});

let params = {
	table: partInfoTable /* INFOTABLE */
};
logger.debug(">>>> GetStructureByNumber JSON>>>" +  JSON.stringify(Resources["InfoTableFunctions"].ToJSON(params))); 

if (partInfoTable.rows.length > 0 ) {

    // result: INFOTABLE dataShape: "WC_Structure_DS"
    result = me.GetStructure({
	PartID: partInfoTable.rows[0].ID  /* STRING {"defaultValue":"VR:wt.part.WTPart:107026"} */
});
    
    
}







]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStructureLevels"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetStructureLevels with PartID="+PartID + "Level=" + level );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

let topLevelItems = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

let childItemsL1 = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

let childItemsL2 = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});


var items = me.GetStructure({
    PartID: PartID /* STRING {"defaultValue":"OR:wt.part.WTPart:754532"} */
});
if (items.length > 0 ) {
    logger.debug("Top Level Part count ="+  items.length);
    for(var i=0; i<items.length; i++) {
        childItemPartId = items.PartId;
        logger.debug("Child PartID ="+  childItemPartId);
        var childItems = me.GetStructure({
            PartID: childItemPartId /* STRING {"defaultValue":"OR:wt.part.WTPart:754532"} */
        }); 
        logger.debug("Child Part count ="+  childItems.length);
        let params = {
            t1: childItemsL1 /* INFOTABLE */,
            t2: childItems /* INFOTABLE */
        };
        // result: INFOTABLE
        childItemsL1 = Resources["InfoTableFunctions"].Union(params);
//        
//        for(var j=0; i<childItemsL1.length; j++) {
//            childItemPartId = childItemsL1.PartId;
//            logger.debug("Child PartID ="+  childItemPartId);
//            childItems2 = me.GetStructure({
//                PartID: childItemPartId /* STRING {"defaultValue":"OR:wt.part.WTPart:754532"} */
//            }); 
//            logger.debug("Child Part count ="+  childItems.length);
//            let params = {
//                t1: childItemsL2 /* INFOTABLE */,
//                t2: childItems2 /* INFOTABLE */
//            };
//            // result: INFOTABLE
//            childItemsL2 = Resources["InfoTableFunctions"].Union(params);
//    	}
//        
//        params = {
//            t1: childItemsL1 /* INFOTABLE */,
//            t2: childItemsL2 /* INFOTABLE */
//        };
//
//        // result: INFOTABLE
//        result = Resources["InfoTableFunctions"].Union(params);
        
    }
}
let params = {
	t1: items /* INFOTABLE */,
	t2: childItemsL1 /* INFOTABLE */
};

// result: INFOTABLE
result = Resources["InfoTableFunctions"].Union(params);



        






]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStructureSingleLevel"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetStructureSingleLevel with PartID="+PartID );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

var nonce = me.GetNonce();

var navCriteria = '{"NavigationCriteria":{"ApplyToTopLevelObject":false,"UseDefaultForUnresolved":false,"SharedToAll":false,"HideUnresolvedDependents":false,"Centricity":false,"ApplicableType":"wt.part.WTPart","ConfigSpecs":[],"Filters":[]}}';
var expand = 'Components($expand=Part($select=Name,Number),PartUse,Occurrence;$levels=2)';

logger.debug("GetStructure with nonce>>>"+  nonce +"<<<<" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: {"CSRF_NONCE" : nonce} /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/PTC.ProdMgmt.GetPartStructure?%24expand="+expand , /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */,
    content: navCriteria
};
logger.debug("GetStructure using params>>>"+  JSON.stringify(params)+"<<<<" );
// result: JSON
//let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);
result = Resources["ContentLoaderFunctions"].PostJSON(params);
//if (jsonResult.Components.length > 0 ) {
//    for(var i=0; i<jsonResult.Components.length; i++) {
//        
//        	result.AddRow({   PathId:jsonResult.Components[i].PathId,
//                              PartUseQuantity:jsonResult.Components[i].PartUse.Quantity,
//                              PartUseID:jsonResult.Components[i].PartUse.ID,
//                              PartUseUnitDisplay:jsonResult.Components[i].PartUse.Unit.Display,
//                              PartUseUnitValue:jsonResult.Components[i].PartUse.Unit.Value,
//                              PartUseReferenceDesignatorRange:jsonResult.Components[i].PartUse.ReferenceDesignatorRange,
//                              PartUseLineNumber:jsonResult.Components[i].PartUse.LineNumber,
//                              PartName:jsonResult.Components[i].PartName,
//                              PartNumber:jsonResult.Components[i].PartNumber,
//                              PVParentTreeId:jsonResult.Components[i].PVParentTreeId,
//                              PVTreeId:jsonResult.Components[i].PVTreeId,
//                              PartId:jsonResult.Components[i].PartId
//                              });
//        	
//		}
//}
//
//
//let sort = {
//    name: "Name",
//    ascending: true
//};
//result.Sort(sort);
//



]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetStructureWithLevels"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering GetStructureWithLevels with PartID="+PartID );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

var nonce = me.GetNonce();

var navCriteria = '{"NavigationCriteria":{"ApplyToTopLevelObject":false,"UseDefaultForUnresolved":false,"SharedToAll":false,"HideUnresolvedDependents":false,"Centricity":false,"ApplicableType":"wt.part.WTPart","ConfigSpecs":[],"Filters":[]}}';
var expand = 'Components($expand=Part($select=Name,Number),PartUse,Occurrence;$levels=4)';

logger.debug("GetStructureWithLevels with nonce>>>"+  nonce +"<<<<" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: {"CSRF_NONCE" : nonce} /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(PartID)+ "')/PTC.ProdMgmt.GetPartStructure?%24expand="+expand , /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */,
    content: navCriteria
};
logger.debug("GetStructureWithLevels using params>>>"+  JSON.stringify(params)+"<<<<" );
// result: JSON
let jsonResult = Resources["ContentLoaderFunctions"].PostJSON(params);
result = jsonResult;
//if (jsonResult.Components.length > 0 ) {
//    for(var i=0; i<jsonResult.Components.length; i++) {
//        
//        	result.AddRow({   PathId:jsonResult.Components[i].PathId,
//                              PartUseQuantity:jsonResult.Components[i].PartUse.Quantity,
//                              PartUseID:jsonResult.Components[i].PartUse.ID,
//                              PartUseUnitDisplay:jsonResult.Components[i].PartUse.Unit.Display,
//                              PartUseUnitValue:jsonResult.Components[i].PartUse.Unit.Value,
//                              PartUseReferenceDesignatorRange:jsonResult.Components[i].PartUse.ReferenceDesignatorRange,
//                              PartUseLineNumber:jsonResult.Components[i].PartUse.LineNumber,
//                              PartName:jsonResult.Components[i].PartName,
//                              PartNumber:jsonResult.Components[i].PartNumber,
//                              PVParentTreeId:jsonResult.Components[i].PVParentTreeId,
//                              PVTreeId:jsonResult.Components[i].PVTreeId,
//                              PartId:jsonResult.Components[i].PartId
//                              });
//        	
//		}
//}
//
//
//let sort = {
//    name: "Name",
//    ascending: true
//};
//result.Sort(sort);
//



]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetVariantSavedFilters"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("Entering GetVariantSavedFilters with  FilterName="+ FilterName );

let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_CriteriaFilters_DS"
});

//https://PP-22010522066K.portal.ptc.io:443/Windchill/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'MYFILTER')&%24count=false
url = me.WindchillServer +"/servlet/odata/v3/NavCriteria/NavigationCriterias?%24filter=%09%20contains(Name%2C'"+FilterName+"')&%24count=false";


let params = {
	headers: {   } /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	url: url , /* STRING */
	password: me.WinchillUserPassword /* STRING */,
	username: me.WindchillUser /* STRING */
};

let jsonResult = Resources["ContentLoaderFunctions"].GetJSON(params);

//let result = JSON.stringify(Jonresult);
if (jsonResult.value.length > 0 ) {
    for(var i=0; i<jsonResult.value.length; i++) {
        	result.AddRow({
                  Name:jsonResult.value[i].Name,
                  text:jsonResult.value[i].Name,
                  value:   (jsonResult.value[i].ID), //.replace(/:/g, "#"),
                  src: "/Thingworx/MediaEntities/WC_Filter",  // MediaEntities["WC_Filter"].GetAvatarURL(),
                  srcpressed: "/Thingworx/MediaEntities/WC_FilterSelected", // MediaEntities["WC_Filter"].GetAvatarURL()
                  pressed: false,
                  srcnotpressed: "/Thingworx/MediaEntities/WC_Filter" // MediaEntities["WC_Filter"].GetAvatarURL()
                  });

    	}
}

//let sort = {
//    name: "Name",
//    ascending: true
//};
//result.Sort(sort);
//
//params = {
//	table: result /* INFOTABLE */
//};
//



]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="RequestTester"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("entering RequestTester with TestInput="+TestInput );
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(WC_Parts_DS)
let resultX = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "WC_Structure_DS"
});

var nonce = me.GetNonce();

var navCriteria = '{"NavigationCriteria":{"ApplyToTopLevelObject":false,"UseDefaultForUnresolved":false,"SharedToAll":false,"HideUnresolvedDependents":false,"Centricity":false,"ApplicableType":"wt.part.WTPart","ConfigSpecs":[],"Filters":[]}}';
var expand = 'Components($expand=Part($select=Name,Number),PartUse,Occurrence;$levels=max)';

logger.debug("GetStructure with nonce>>>"+  nonce +"<<<<" );
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: {"CSRF_NONCE" : nonce} /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
    url: me.WindchillServer +"/servlet/odata/v5/ProdMgmt/Parts('" + encodeURIComponent(TestInput)+ "')/PTC.ProdMgmt.GetPartStructure?%24expand="+expand , /* STRING */
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WinchillUserPassword /* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUser /* STRING */,
    content: navCriteria
};
logger.debug("GetStructure using params>>>"+  JSON.stringify(params)+"<<<<" );
// result: JSON
let result = Resources["ContentLoaderFunctions"].PostJSON(params);





]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="Tester"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[result = 101;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="PVZFolder"/><AlertDefinitions name="RepoName"/><AlertDefinitions name="WinchillUserPassword"/><AlertDefinitions name="WindchillServer"/><AlertDefinitions name="WindchillUser"/></AlertConfigurations><ImplementedShapes/><ThingProperties><WindchillServer><Value><![CDATA[https://pp-23010920476m.portal.ptc.io/Windchill]]></Value><Timestamp>2023-01-13T22:03:24.129Z</Timestamp><Quality>GOOD</Quality></WindchillServer><WinchillUserPassword><Value><![CDATA[ptc]]></Value><Timestamp>2022-07-13T17:38:30.421Z</Timestamp><Quality>GOOD</Quality></WinchillUserPassword><PVZFolder><Value><![CDATA[PVZFolder]]></Value><Timestamp>1970-01-01T00:00:00.000Z</Timestamp><Quality>UNKNOWN</Quality></PVZFolder><RepoName><Value><![CDATA[CAD_Repo]]></Value><Timestamp>1970-01-01T00:00:00.000Z</Timestamp><Quality>UNKNOWN</Quality></RepoName><WindchillUser><Value><![CDATA[wcadmin]]></Value><Timestamp>2022-07-13T17:38:38.233Z</Timestamp><Quality>GOOD</Quality></WindchillUser></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.183Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStructureWithLevels : service updated&#10;" timestamp="2023-01-31T20:56:34.677Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetStructureWithLevels : service updated&#10;" timestamp="2023-01-31T20:59:12.345Z" user="Administrator"/></ConfigurationChanges></Thing></Things><Logs/><Authenticators/><ThingPackages/><NotificationDefinitions/><ApplicationKeys><ApplicationKey clientName="" description="" documentationContent="" expirationDate="2022-10-14T15:56:00.000Z" homeMashup="" ipWhitelist="" keyId="945a7d18-66eb-44ee-b14a-05fd3789cb00" lastModifiedDate="2023-01-11T14:26:56.015Z" name="ipg" projectName="WCProject" tags="" userNameReference="Administrator"><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, userNameReference : updated&#10;" timestamp="2022-07-21T15:56:59.717Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="header : expirationDate : updated&#10;" timestamp="2022-07-21T15:57:10.873Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.891Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="header : expirationDate : updated&#10;" timestamp="2022-12-01T15:31:00.586Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.105Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="" timestamp="2022-12-08T20:19:06.362Z" user="sgreywilson"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></ApplicationKey><ApplicationKey clientName="" description="" documentationContent="" expirationDate="2023-03-29T15:35:00.000Z" homeMashup="" ipWhitelist="" keyId="f2fac8e0-2e1d-4d62-814d-1f0d9670ba19" lastModifiedDate="2023-01-11T14:26:56.031Z" name="FlowKey" projectName="WCProject" tags="" userNameReference="Administrator"><Owner name="Administrator" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated, userNameReference : updated&#10;" timestamp="2022-02-18T16:35:48.704Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-02-18T21:04:38.708Z" user="demo"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2022-02-19T19:27:59.176Z" user="demo"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2022-02-19T19:28:20.456Z" user="demo"/><ConfigurationChange changeAction="MODIFY" changeReason="header : expirationDate : updated&#10;" timestamp="2022-02-19T19:28:20.550Z" user="demo"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-07-13T16:40:01.274Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2022-08-08T16:12:21.893Z" user="sgreywilson"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [PTCDefaultProject]" timestamp="2022-09-23T21:08:06.042Z" user="Administrator"/><ConfigurationChange changeAction="MODIFY" changeReason="SetProjectName : [WCProject]" timestamp="2022-09-23T21:08:06.089Z" user="Administrator"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-01-11T14:26:41.136Z" user="Administrator"/></ConfigurationChanges></ApplicationKey></ApplicationKeys><StateDefinitions/><ThingTemplates/><ExtensionPackages/><Organizations/><Menus/><ThingGroups/><Resources/><DataTags/><ThingShapes/><Subsystems/><NotificationContents/></Entities>